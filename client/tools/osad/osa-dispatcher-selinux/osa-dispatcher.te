policy_module(osa-dispatcher,@@VERSION@@)

require {
	type var_log_t;
	type spacewalk_log_t;
	type httpd_sys_content_t;
	type jabber_client_port_t;
	type inaddr_any_node_t;
	type postgresql_port_t;
}

type osa_dispatcher_t;
type osa_dispatcher_exec_t;
init_daemon_domain(osa_dispatcher_t,osa_dispatcher_exec_t)

type osa_dispatcher_log_t;
logging_log_file(osa_dispatcher_log_t)

type osa_dispatcher_var_run_t;
files_pid_file(osa_dispatcher_var_run_t)
files_pid_filetrans(osa_dispatcher_t,osa_dispatcher_var_run_t,file)
create_files_pattern(osa_dispatcher_t,var_run_t,osa_dispatcher_var_run_t)
write_files_pattern(osa_dispatcher_t,var_run_t,osa_dispatcher_var_run_t)

files_read_etc_files(osa_dispatcher_t)
libs_use_ld_so(osa_dispatcher_t)
libs_use_shared_libs(osa_dispatcher_t)

miscfiles_read_localization(osa_dispatcher_t)
corecmd_exec_bin(osa_dispatcher_t)

kernel_read_system_state(osa_dispatcher_t)

files_read_usr_files(osa_dispatcher_t)

dev_read_urand(osa_dispatcher_t)

files_search_var(osa_dispatcher_t)
allow osa_dispatcher_t var_log_t:dir search_dir_perms;
allow osa_dispatcher_t spacewalk_log_t:dir search_dir_perms;
# We cannot use logging_log_filetrans here because /var/log/rhn has
# type spacewalk_log_t.
filetrans_pattern(osa_dispatcher_t,spacewalk_log_t,osa_dispatcher_log_t,{ file dir })
manage_files_pattern(osa_dispatcher_t,osa_dispatcher_log_t,osa_dispatcher_log_t)

init_rw_utmp(osa_dispatcher_t)

read_files_pattern(osa_dispatcher_t,httpd_sys_content_t,httpd_sys_content_t)

allow osa_dispatcher_t self:fifo_file rw_fifo_file_perms;

gen_require(`
	type lo_node_t;
')
allow osa_dispatcher_t lo_node_t:udp_socket node_bind;
corenet_udp_bind_all_nodes(osa_dispatcher_t)
corenet_udp_bind_generic_node(osa_dispatcher_t)

sysnet_dns_name_resolve(osa_dispatcher_t)

allow osa_dispatcher_t jabber_client_port_t:tcp_socket name_connect;
allow osa_dispatcher_t postgresql_port_t:tcp_socket name_connect;

corenet_all_recvfrom_unlabeled(osa_dispatcher_t)
corenet_all_recvfrom_netlabel(osa_dispatcher_t)

allow osa_dispatcher_t self:process { setpgid setsched getsched };
allow osa_dispatcher_t self:capability { sys_nice chown fowner sys_tty_config };

allow osa_dispatcher_t inaddr_any_node_t:tcp_socket node_bind;
allow osa_dispatcher_t osa_dispatcher_t:tcp_socket listen;

files_list_tmp(osa_dispatcher_t)

optional_policy(`
	tunable_policy(`allow_ypbind',`
		nis_use_ypbind_uncond(osa_dispatcher_t)
	')
')

optional_policy(`
	gen_require(`
		type oracle_port_t;
	')
allow osa_dispatcher_t oracle_port_t:tcp_socket name_connect;
')

postgresql_stream_connect(osa_dispatcher_t)

kernel_read_kernel_sysctls(osa_dispatcher_t)
dev_list_sysfs(osa_dispatcher_t)
dev_read_sysfs(osa_dispatcher_t)

require {
	class netlink_route_socket { write getattr read bind create nlmsg_read };
}

allow osa_dispatcher_t self:netlink_route_socket { write getattr read bind create nlmsg_read };

allow osa_dispatcher_t self:process execmem;
