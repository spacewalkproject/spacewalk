<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook V3.1//EN"
>
<refentry>

<RefMeta>
<RefEntryTitle>spacewalk-clone-by-date</RefEntryTitle><manvolnum>8</manvolnum>
<RefMiscInfo>Version 1.0</RefMiscInfo>
</RefMeta>

<RefNameDiv>
<RefName><command>spacewalk-clone-by-date</command></RefName>
<RefPurpose>
Utility for cloning errata by date (For RHEL5 and above).
</RefPurpose>
</RefNameDiv>


<RefSynopsisDiv>
<Synopsis>
    <cmdsynopsis>
        <command>spacewalk-clone-by-date</command>
        <arg>options <replaceable>...</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-c <replaceable>CONFIGFILE</replaceable></arg>
        <arg>--config=<replaceable>CONFIGFILE</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-m</arg><arg>--sample-config</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-u <replaceable>USERNAME</replaceable></arg>
        <arg>--username=<replaceable>USERNAME</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-p <replaceable>PASSWORD</replaceable></arg>
        <arg>--password=<replaceable>PASSWORD</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-l <replaceable>SRC DEST <optional>DEST_NAME <optional>DEST_SUMMARY <optional>DEST_DESCRIPTION</optional></optional></optional></replaceable></arg>
	<arg>--channels=<replaceable>SRC DEST <optional>DEST_NAME <optional>DEST_SUMMARY <optional>DEST_DESCRIPTION</optional></optional></optional></replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-d=<replaceable>YYYY-MM-DD</replaceable></arg>
        <arg>--to_date=<replaceable>YYYY-MM-DD</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-b <replaceable>PKG1,PKG2,PKG3</replaceable></arg>
        <arg>--blacklist=<replaceable>PKG1,PKG2,PKG3</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-r <replaceable>PKG1,PKG2,PKG3</replaceable></arg>
        <arg>--removelist=<replaceable>PKG1,PKG2,PKG3</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-v</arg><arg>--validate</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-k</arg><arg>--skip_depsolve</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-y</arg><arg>--assumeyes</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-o</arg><arg>--security_only</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-z</arg><arg>--use-update-date</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-g</arg><arg>--background</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-n</arg><arg>--no-errata-sync</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-h</arg><arg>--help</arg>
    </cmdsynopsis>
    <cmdsynopsis>
        <arg>-a <replaceable>SRC_PARENT DEST_PARENT</replaceable></arg>
        <arg>--parents=<replaceable>SRC_PARENT DEST_PARENT</replaceable></arg>
    </cmdsynopsis>
</Synopsis>
</RefSynopsisDiv>

<RefSect1><Title>Description</Title>

    <para>
        <emphasis>spacewalk-clone-by-date</emphasis> tool, clones all the errata belonging to a specified channel, as of a specific date.
    </para>

    <para>
        Script to clone all errata belonging to software channels as of a specific date, ensuring any added packages have their dependencies satisfied. Any destination channels that do not exist will be created.
    </para>
    <para>
        By specifying channels on the command line, only a single channel tree (a base channel and its children) can be cloned with a single command. If you would like to specify multiple trees within a single command, simply use a configuration file.  See --sample-config for a sample.
    </para>
    <para>
        All options can either be specified in the configuration file or via command line.  Any option specified via command line will override a configuration file value with the exception of channels. If a configuration file is specified, --channels is not a valid command line argument.
    </para>
    <para>
        Please keep in mind that not all packages are associated with an erratum. This means that since spacewalk-clone-by-date will grab only packages associated with an erratum, not all packages available as of the specified date will get cloned.
    </para>
    <para>
        Also note that spacewalk-clone-by-date will pull in any packages needed to resolve dependencies for any errata being cloned. Since dependency-resolution selects the "best" package to resolve dependencies, it is possible for the cloned channel(s) to end up with packages that are not directly associated with any errata, and which are newer than the specified date. This is expected behavior.
    </para>
    <para>
	Note: spacewalk-clone-by-date does not support RHEL4 and earlier versions. It's a limitation of this tool.   
    </para>

</RefSect1>

<RefSect1><Title>Options</Title>
<variablelist>
    <varlistentry>
        <term>-h, --help</term>
        <listitem>
            <para>Display the help screen with a list of options.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-c <replaceable>FILE</replaceable>, --config=<replaceable>FILE</replaceable></term>
        <listitem>
            <para>Configuration file holding parameters, see --sample-config for an example.
                      Any command-line parameters override those in specified config file.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-m  --sample-config</term>
        <listitem>
            <para>Generate a sample configuration file.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-u <replaceable>USERNAME</replaceable>, --username=<replaceable>USERNAME</replaceable></term>
        <listitem>
            <para>username of user that has administrative access.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-p <replaceable>PASSWORD</replaceable>, --password=<replaceable>PASSWORD</replaceable></term>
        <listitem>
            <para>password of user that has administrative access.  If not provided, password will be prompted for.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-l <replaceable>SRC_LABEL DEST_LABEL <optional>DEST_NAME <optional>DEST_SUMMARY <optional>DEST_DESCRIPTION</optional></optional></optional></replaceable>, --channels=<replaceable>SRC_LABEL DEST_LABEL <optional>DEST_NAME <optional>DEST_SUMMARY <optional>DEST_DESCRIPTION</optional></optional></optional></replaceable></term>
        <listitem>
            <para>Space separated list of source channel and destination channel.  Can be specified multiple times to provide base channel and child channel pairs of a single channel tree.  Can optionally include destination channel name, summary, and description, in that order.  To specify more than one channel tree, specify a config file.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-y  --assumeyes</term>
        <listitem>
            <para>Instead of asking for confirmation before cloning a channel or errata, continue uninterrupted.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-o  --security_only</term>
        <listitem>
            <para>Clone only security errata (and their dependencies).</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-z  --use-update-date</term>
        <listitem>
            <para>While cloning errata by date, clone all errata that have last been updated on or before the date provided by to_date. If omitted will use issue date of errata (default).</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-v  --validate</term>
        <listitem>
            <para>Run repoclosure on all provided channels.  This overrides --to_date and will not perform any cloning.</para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-k  --skip_depsolve</term>
        <listitem>
            <para>Do not attempt to ensure added packages have needed dependencies (Not recommended). </para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-d <replaceable>YYYY-MM-DD</replaceable>, --to_date=<replaceable>YYYY-MM-DD</replaceable></term>
        <listitem>
            <para>All errata on or before the specified date will be cloned if it does not already exist in the destination channel(s). If this option is omitted no errata will be cloned.
            </para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-b <replaceable>PKG1,PKG2,PKG3</replaceable>, --blacklist=<replaceable>PKG1,PKG2,PKG3</replaceable></term>
        <listitem>
            <para>Comma separated list of package names to be removed after cloning. Perl-style regular expressions also supported.  Only newly added packages will removed if they are on the blacklist.  <emphasis>Dependency resolution is not ensured on resulting repository.</emphasis>
            </para>
            <para>
                Note:  This option is global across all destination channels.  To specify per channel blacklists, you must use a configuration file.  See --sample-config for an example.
            </para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-r <replaceable>PKG1,PKG2,PKG3</replaceable>, --removelist=<replaceable>PKG1,PKG2,PKG3</replaceable></term>
        <listitem>
            <para>Comma separated list of package names to be removed after cloning.  Perl-style regular expressions are also supported.  All packages are considered for removal, even those not added by errata/channel cloning.  <emphasis>Dependency resolution is not ensured on resulting repository.</emphasis>
            </para>
            <para>
                Note:  This option is global across all destination channels. To specify per channel removelists, you must use a configuration file.  See --sample-config for an example.
            </para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-g --background</term>
        <listitem>
            <para>This option makes the cloning of the errata into the destination channel happen asynchronously in the background, allowing the script to return much faster.
            </para>
            <para>
                Note:  This option is global across all destination channels. To specify per channel removelists, you must use a configuration file.  See --sample-config for an example.
            </para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-n --no-errata-sync</term>
        <listitem>
            <para>Do not automatically sychronize the package list of cloned errata with their originals. This may make spacewalk-clone-by-date have unexpected results if the original errata have been updated (e.g.: syncing another architecture for a channel) since the cloned errata were created. If omitted we will synchronize the cloned errata with the originals to ensure the expected packages are included (default).
            </para>
	    <para>Errata clones do not necessarily get out-of-sync by satellite-syncing new architectures of existing channels. Another example would be if the errata contains some packages in one channel (say the base channel) and additional packages in another channel (say a child channel). Or it may be due to simply adding or removing packages from a custom errata that you have already created a clone of. Since cloned errata are not automatically updated when the original errata are, over time they may become out-of-sync are require synchronization in order for associating the cloned errata with a cloned channel to have the normally expected effect.
            </para>
        </listitem>
    </varlistentry>
    <varlistentry>
        <term>-a <replaceable>SRC_PARENT DEST_PARENT</replaceable>, --parents=<replaceable>SRC_PARENT DEST_PARENT</replaceable></term>
        <listitem>
            <para>Space separated list of source parent channel and destination parent channel.  These channels are used for resolving dependencies and cloning the children, but will not be cloned themselves.  Both channels specified here must already exist.  There is no way to specify this option through the config channel, you must simply re-list the parent src:dest channels as part of the list to clone.  Spacewalk-clone-by-date will detect that the dest parent channel already exists and will not try to re-create it.</para>
        </listitem>
    </varlistentry>
</variablelist>
</RefSect1>


<RefSect1><Title>Examples</Title>
<example>
    <title>Clone a base channel and child channel to 2008-12-20 with a blacklist excluding all versions of squid, and all versions of any package that starts with 'sendmail'.</title>
    <para>spacewalk-clone-by-date  --channels=rhel-x86_64-server-5 clone-rhel --channels=rhn-tools-rhel-x86_64-server-5 clone-tools 'Clone Tools Name' 'Clone Tools Summary' 'Clone Tools Description'  --username admin --password redhat --to_date=2008-12-20 --blacklist=sendmail.*,squid</para>
</example>
<example>
    <title>Clone with options completely from a config file.</title>
    <para>spacewalk-clone-by-date  --config=/etc/clone.conf</para>
</example>
<example>
    <title>Clone while overriding some options from the command line.</title>
    <para>spacewalk-clone-by-date  --config=/etc/clone.conf --username rocky --password squirrel --to_date=2010-10-09</para>
</example>
</RefSect1>

<RefSect1><Title>Authors</Title>
<simplelist>
    <member>Justin Sherrill <email>jsherrill@redhat.com</email></member>
</simplelist>
</RefSect1>
</refentry>

