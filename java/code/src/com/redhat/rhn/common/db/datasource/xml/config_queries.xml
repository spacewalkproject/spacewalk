<datasource_modes>

<!-- Called only from ConfigFactory - so doesn't do security checking -->
<mode name="max_revision_for_file">
  <query params="cfid">
SELECT CR.revision AS revision, CR.id as id
  FROM rhnConfigRevision CR
 WHERE CR.config_file_id = :cfid
   AND CR.revision = (SELECT  MAX(CR.revision)
                        FROM  rhnConfigRevision CR
                       WHERE  CR.config_file_id = :cfid)
  </query>
</mode>

<!-- Called only from ConfigFactory - so doesn't do security checking -->
<mode name="lookup_id_by_label_org_channel_type">
  <query params="cc_label, org_id, cct_label">
SELECT cc.id from rhnConfigChannel cc
                inner join rhnConfigChannelTYpe cct on cct.ID = cc.confchan_type_id
                where cct.label = :cct_label
                and cc.label = :cc_label
                and cc.org_id = :org_id

  </query>
</mode>


<!-- returns the count of all the locally managed file paths in a system
        that are aacessible to the user-->
<mode name ="count_locally_managed_file_paths">
        <query params = "sid, user_id, cct_label">
                select file_type, count(file_type) as count from (
                SELECT  CFT.label as file_type
                  FROM rhnConfigChannelType CCT
                        INNER JOIN rhnConfigChannel CC ON CCT.ID = CC.confchan_type_id
                        INNER JOIN rhnConfigFile CF ON CF.config_channel_id = CC.id
                        INNER JOIN rhnServerConfigChannel SCC ON SCC.config_channel_id = CF.config_channel_id
                        INNER JOIN rhnUserServerPerms USP ON USP.server_id = SCC.server_id
                        INNER JOIN rhnConfigRevision CR ON CF.id = CR.config_file_id
                        INNER JOIN rhnConfigFileType CFT ON CR.CONFIG_FILE_TYPE_ID = CFT.ID
                 WHERE SCC.server_id = :sid
                    AND CF.latest_config_revision_id = CR.id
                   AND CCT.label   = :cct_label
                   AND USP.user_id = :user_id
         AND rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1) subselect
                   GROUP by file_type
        </query>
</mode>

<!-- returns the list of all the centrally managed file paths in a system
        that are accessible to the user including, the duplicates-->
<mode name ="centrally_managed_file_paths">
        <query params = "sid, user_id">
                SELECT CFN.path, CFT.label as file_type
                  FROM rhnConfigChannelType CCT
                        INNER JOIN rhnConfigChannel CC ON CCT.ID = CC.confchan_type_id
                        INNER JOIN rhnConfigFile CF ON CF.config_channel_id = CC.id
                        INNER JOIN rhnServerConfigChannel SCC ON SCC.config_channel_id = CF.config_channel_id
                        INNER JOIN rhnUserServerPerms USP ON USP.server_id = SCC.server_id
                        INNER JOIN rhnConfigRevision CR ON CF.id = CR.config_file_id
                        INNER JOIN rhnConfigFileName CFN ON CF.config_file_name_id = CFN.id
                        INNER JOIN rhnConfigFileType CFT ON CR.CONFIG_FILE_TYPE_ID = CFT.ID
                 WHERE SCC.server_id = :sid
                        AND USP.user_id = :user_id
                    AND CF.latest_config_revision_id = CR.id
                   AND CCT.label   = 'normal'
                   AND rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
                ORDER BY CCT.priority, SCC.position
        </query>
</mode>

<!-- returns the list of all the centrally Deployable file paths in a system
        subtracting  paths that are in local overrides from the original list
        that are accessible to the user, including the duplicates-->
<mode name ="centrally_deployable_file_paths">
        <query params = "sid,user_id">
                SELECT CFN.path, CFT.label as file_type
                  FROM rhnConfigChannelType CCT
                        INNER JOIN rhnConfigChannel CC ON CCT.ID = CC.confchan_type_id
                        INNER JOIN rhnConfigFile CF ON CF.config_channel_id = CC.id
                        INNER JOIN rhnServerConfigChannel SCC ON SCC.config_channel_id = CF.config_channel_id
                        INNER JOIN rhnUserServerPerms USP ON USP.server_id = SCC.server_id
                        INNER JOIN rhnConfigRevision CR ON CF.id = CR.config_file_id
                        INNER JOIN rhnConfigFileName CFN ON CF.config_file_name_id = CFN.id
                        INNER JOIN rhnConfigFileType CFT ON CR.CONFIG_FILE_TYPE_ID = CFT.ID
                 WHERE SCC.server_id = :sid
                   AND rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
                        AND USP.user_id = :user_id
                    AND CF.latest_config_revision_id = CR.id
                   AND CCT.label = 'normal'
                   AND CFN.path NOT IN
                        (SELECT CFN1.path
                                          FROM rhnConfigChannelType CCT1
                             INNER JOIN rhnConfigChannel CC1 ON CCT1.ID = CC1.confchan_type_id
                             INNER JOIN rhnConfigFile CF1 ON CF1.config_channel_id = CC1.id
                                 INNER JOIN rhnServerConfigChannel SCC1 ON SCC1.config_channel_id = CF1.config_channel_id
                                INNER JOIN rhnConfigRevision CR1 ON CF1.id = CR1.config_file_id
                                INNER JOIN rhnConfigFileName CFN1 ON CF1.config_file_name_id = CFN1.id
                                 WHERE SCC1.server_id = :sid
                        AND CF1.latest_config_revision_id = CR1.id
                                        AND CCT1.label = 'local_override'
                ) ORDER BY CCT.priority, SCC.position
        </query>
</mode>

<!-- returns a count of config file paths  (files & directories)
the were associated to a scheduled action on a server-->
<mode name ="count_paths_in_action">
        <query params = "sid,aid">
                select file_type, count(file_type) as count from (
                SELECT  CFT.label as file_type
                        from rhnActionConfigRevision rac
                        INNER JOIN rhnConfigRevision cr on  rac.CONFIG_REVISION_ID = cr.ID
                        INNER JOIN rhnConfigFileType cft ON cr.CONFIG_FILE_TYPE_ID = cft.ID
                where
                    rac.server_id = :sid and
                    rac.action_id  = :aid
            ) subselect GROUP BY file_type
    </query>
</mode>


<!-- returns the count of config files that were
successfully compared in a scheduled diff action on a server-->
<mode name ="count_successfully_compared_paths">
        <query params = "sid,aid">
                select file_type, count(file_type) as count from (
                SELECT  CFT.label as file_type
                        from rhnActionConfigRevision acr
                        INNER JOIN rhnConfigRevision cr on  acr.CONFIG_REVISION_ID = cr.ID
                        INNER JOIN rhnConfigFileType cft ON cr.CONFIG_FILE_TYPE_ID = cft.ID
                where
                    acr.server_id = :sid and
                    acr.action_id  = :aid and
                    acr.failure_id is null
            ) subselect GROUP BY file_type
    </query>
</mode>


<!-- returns the count of config files that were
successfully compared AND actually differed from the files
on the server in a scheduled diff action on a server-->

<mode name ="count_differing_paths">
        <query params = "sid,aid">
                select file_type, count(file_type) as count from (
                SELECT  CFT.label as file_type
             from rhnActionConfigRevision acr
                 INNER JOIN rhnConfigRevision cr on  acr.CONFIG_REVISION_ID = cr.ID
                 INNER JOIN rhnConfigFileType cft ON cr.CONFIG_FILE_TYPE_ID = cft.ID
                 INNER JOIN rhnActionConfigRevisionResult acrr on  acr.id = acrr.action_config_revision_id
            where
                acr.server_id = :sid and
                    acr.action_id  = :aid and
                    acr.failure_id is null and
                acrr.result is not null
            ) subselect GROUP BY file_type
    </query>
</mode>



<query name = "find_file_name_ids_and_paths" params="user_id, sid, channel_type">
  SELECT DISTINCT CFN.id, CFN.path
    FROM rhnConfigChannelType CCT
          INNER JOIN rhnConfigChannel CC on CC.confchan_type_id = CCT.id
          INNER JOIN rhnConfigFile CF on CF.config_channel_id = CC.id
          INNER JOIN rhnConfigFileName CFN on CF.config_file_name_id = CFN.id
          INNER JOIN rhnServerConfigChannel SCC on SCC.config_channel_id = CF.config_channel_id
          INNER JOIN rhnUserServerPerms USP on USP.server_id = SCC.server_id
    WHERE
       USP.user_id = :user_id
       AND SCC.SERVER_ID = :sid
       AND CCT.label = :channel_type
    ORDER BY CFN.path
 </query>


<!-- returns a list of unique file paths containing info pertinent
to the SDC View/Modify files page -->
<query name="fill_central_config_details" params="sid, channel_type">
  SELECT  CFN.id as id,
        CC.name as  config_channel_name,
        CF.id as config_file_id,
        CR.REVISION as config_revision,
        CR.ID as config_revision_id,
                CC.id as config_channel_id,
                cft.Label as config_file_type,
        :channel_type as config_channel_type
        FROM rhnConfigRevision CR
              INNER JOIN rhnConfigFile CF ON CF.latest_config_revision_id = CR.id
              INNER JOIN rhnServerConfigChannel SCC ON CF.config_channel_id = SCC.config_channel_id
              INNER JOIN rhnConfigChannel CC ON CC.id = SCC.config_channel_id
              INNER JOIN rhnConfigChannelType CCT ON CC.confchan_type_id = CCT.id
              INNER JOIN rhnConfigFileName CFN ON CF.config_file_name_id = CFN.id
                  INNER JOIN rhnConfigFileType cft ON cft.id = cr.config_file_type_id
              WHERE
                     SCC.server_id = :sid
                     AND CFN.id in (%s)
                     AND CCT.label = 'normal'
                     AND SCC.server_id = :sid
                     AND SCC.position = ( SELECT  min(SCC.position)
                                          FROM  rhnServerConfigChannel SCC
                                          INNER JOIN rhnConfigFile CF ON CF.config_channel_id = SCC.config_channel_id
                                          INNER JOIN rhnConfigChannel CC ON CC.id = SCC.config_channel_id
                                          INNER JOIN rhnConfigChannelType CCT ON CC.confchan_type_id = CCT.id
                                          WHERE
                                            SCC.server_id = :sid
                                            AND  CF.config_file_name_id = CFN.id
                                            AND CCT.label = 'normal'
                                           )
</query>


<query name="fill_local_config_details" params="sid, channel_type">
 SELECT CFN.id as id,
         CF.id as local_config_file_id,
                CR.REVISION  as local_revision,
        CR.ID as local_revision_id,
                CC.id as local_config_channel_id,
                cft.label as local_config_file_type,
        :channel_type as config_channel_type
    FROM rhnConfigRevision CR
        INNER JOIN rhnConfigFile CF ON CF.latest_config_revision_id = CR.id
        INNER JOIN rhnServerConfigChannel SCC ON CF.config_channel_id = SCC.config_channel_id
        INNER JOIN rhnConfigChannel CC ON CC.id = SCC.config_channel_id
        INNER JOIN rhnConfigChannelType CCT ON CC.confchan_type_id = CCT.id
        INNER JOIN rhnConfigFileName CFN ON CF.config_file_name_id = CFN.id
        INNER JOIN rhnConfigFileType cft ON cft.id = cr.config_file_type_id
        WHERE
           CFN.id in (%s)
           AND CCT.label = 'local_override'
           AND SCC.server_id = :sid
</query>


<mode name="central_managed_files_for_sdc" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
  <query name="find_file_name_ids_and_paths" params="user_id, sid, channel_type"/>
        <!-- This one gets the Central revision stuff  -->
        <elaborator name="fill_central_config_details" params="sid, channel_type"/>
        <!-- This one gets the local revision -->
        <elaborator name="fill_local_config_details" params="sid, channel_type"/>
</mode>

<mode name="local_managed_files_for_sdc" class="com.redhat.rhn.frontend.dto.LocalConfigFileNameDto">
  <query name="find_file_name_ids_and_paths" params="user_id, sid, channel_type"/>
        <!-- This one gets the Central revision stuff  -->
        <elaborator name="fill_central_config_details" params="sid, channel_type"/>
        <!-- This one gets the local revision -->
        <elaborator name="fill_local_config_details" params="sid, channel_type"/>
</mode>


<mode name="sandbox_managed_files_for_sdc" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
    <query name="find_file_name_ids_and_paths" params="user_id, sid, channel_type"/>
    <elaborator params="sid, channel_type">
        SELECT CF.config_file_name_id as id,
                                        CF.id as config_file_id,
                                         cr.revision as config_revision,
                                         cr.id as config_revision_id,
                                         cft.label as config_file_type,
                                         cr.modified as last_modified_date,
                                         :channel_type as config_channel_type
                from rhnConfigRevision CR
                 INNER JOIN rhnConfigFile CF ON CF.latest_config_revision_id = CR.id
                 INNER JOIN rhnServerConfigChannel SCC ON CF.config_channel_id = SCC.config_channel_id
                 INNER JOIN rhnConfigChannel CC ON CC.id = SCC.config_channel_id
                 INNER JOIN rhnConfigChannelType CCT ON CC.confchan_type_id = CCT.id
                 INNER JOIN rhnConfigFileType cft ON cft.id = cr.config_file_type_id
                WHERE
                  CCT.label = 'server_import'
                  AND SCC.server_id = :sid
                                  AND  CF.config_file_name_id  in (%s)
    </elaborator>
</mode>

<mode name="config_managed_systems" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query name="available_to_user_and_config_managed" params="user_id">
SELECT * FROM (
SELECT DISTINCT S.id,
                S.name
      FROM rhnServer S
INNER JOIN rhnUserServerPerms USP on S.id = USP.server_id
INNER JOIN rhnClientCapability CC on S.id = CC.server_id
INNER JOIN rhnClientCapabilityName CCN on CC.capability_name_id = CCN.id
INNER JOIN rhnServerFeaturesView SFV on SFV.server_id = s.id
     WHERE USP.user_id = :user_id
       AND CCN.name LIKE 'configfiles%'
       AND SFV.label = 'ftr_config'
) X
ORDER BY UPPER(COALESCE(X.name, '(none)')), X.id
  </query>
  <elaborator>
SELECT S.id,
       COALESCE((SELECT SCC.config_channel_id
              FROM rhnConfigChannelType CCT, rhnConfigChannel CC, rhnServerConfigChannel SCC
             WHERE SCC.server_id = S.id
               AND SCC.config_channel_id = CC.id
               AND CC.confchan_type_id = CCT.id
               AND CCT.label = 'local_override'), 0) CHANNEL_ID,
       (SELECT COUNT(CF.id)
          FROM rhnConfigFile CF, rhnConfigChannelType CCT, rhnConfigChannel CC, rhnServerConfigChannel SCC
         WHERE SCC.server_id = S.id
           AND SCC.config_channel_id = CC.id
           AND CC.confchan_type_id = CCT.id
           AND CF.config_channel_id = CC.id
           AND CCT.label = 'local_override') LOCAL_FILE_COUNT,
       COALESCE((SELECT COUNT(SCC.config_channel_id)
              FROM rhnConfigChannelType CCT, rhnConfigChannel CC, rhnServerConfigChannel SCC
             WHERE SCC.server_id = S.id
               AND SCC.config_channel_id = CC.id
               AND CC.confchan_type_id = CCT.id
               AND CCT.label = 'normal'), 0) CONFIG_CHANNEL_COUNT,
       COALESCE((SELECT COUNT(CF.id)
              FROM rhnConfigChannelType CCT, rhnConfigChannel CC, rhnServerConfigChannel SCC, rhnConfigFile CF
             WHERE SCC.server_id = S.id
               AND SCC.config_channel_id = CC.id
               AND CC.confchan_type_id = CCT.id
               AND CCT.label = 'normal'
               AND CF.config_channel_id = CC.id), 0) GLOBAL_FILE_COUNT,
       COALESCE((SELECT COUNT(CF.config_file_name_id)
              FROM rhnConfigChannelType CCT, rhnConfigChannel CC, rhnServerConfigChannel SCC, rhnConfigFile CF,
                   rhnConfigChannelType CCT2, rhnConfigChannel CC2, rhnServerConfigChannel SCC2, rhnConfigFile CF2
             WHERE SCC.server_id = S.id
               AND SCC.config_channel_id = CC.id
               AND CC.confchan_type_id = CCT.id
               AND CCT.label = 'normal'
               AND CC.id = CF.config_channel_id
               AND SCC2.server_id = S.id
               AND SCC2.config_channel_id = CC2.id
               AND CC2.confchan_type_id = CCT2.id
               AND CCT2.label = 'local_override'
               AND CC2.id = CF2.config_channel_id
               AND CF.config_file_name_id = CF2.config_file_name_id
               ), 0) OVERRIDDEN_COUNT
  FROM rhnServer S
 WHERE S.id IN (%s)
  </elaborator>
</mode>

<mode name="non_config_managed_systems" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query params="user_id">
  SELECT  S.id, S.name,
                        'N' as capable
    FROM  rhnServer S
                inner join rhnUserServerPerms USP on USP.server_id = S.id
   WHERE  USP.user_id = :user_id
     AND  NOT EXISTS
                 (select 1 FROM  rhnClientCapability CC
                        inner join  rhnClientCapabilityName CCN on CC.capability_name_id = CCN.id
                        inner join rhnServerFeaturesView SFV on SFV.server_id = CC.server_id
                        where
                                CC.server_id = S.id and
                                CCN.name LIKE 'configfiles%' AND
                                SFV.label = 'ftr_config')
        ORDER BY  S.name
  </query>
  <elaborator name="non_managed_elaborator" />
</mode>

<mode name="non_config_managed_systems_in_set" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query params="user_id, set">
  SELECT  S.id, S.name,
                        'N' as capable
    FROM  rhnUserServerPerms USP
                        inner join  rhnSet ST on ST.user_id = USP.user_id and ST.element = USP.server_id
                        inner join rhnServer S on USP.server_id = S.id
   WHERE  ST.user_id = :user_id
     AND  ST.label = :set
     AND  NOT EXISTS ( select 1 FROM  rhnClientCapability CC
                        inner join  rhnClientCapabilityName CCN on CC.capability_name_id = CCN.id
                        inner join rhnServerFeaturesView SFV on SFV.server_id = CC.server_id
                        where CC.server_id = S.id and CCN.name LIKE 'configfiles%' AND
                                SFV.label = 'ftr_config')
ORDER BY  S.name
  </query>
  <elaborator name="non_managed_elaborator" />
</mode>

        <query name="non_managed_elaborator">
SELECT  S.id,
<!-- The following three items will return with a character
     Y = package installed, P = package install pending, N = no package nor install -->
        case when (SELECT  DISTINCT 1
                 FROM  rhnServerPackage SP, rhnPackageName PN
                WHERE  S.id = SP.server_id
                  AND  SP.name_id = PN.id
                  AND  PN.name = 'rhncfg') is not null then 'Y'
                 when (SELECT  DISTINCT 1
                          FROM  rhnServerAction SA, rhnActionPackage AP,
                                rhnPackageName PN, rhnActionStatus PAS
                         WHERE  S.id = SA.server_id
                           AND  SA.status = PAS.id
                           AND  PAS.name IN ('Queued', 'Picked Up')
                           AND  SA.action_id = AP.action_id
                           AND  AP.name_id = PN.id
                           AND  PN.name = 'rhncfg') is not null then 'P' else 'N' end AS rhncfg,
        case when (SELECT  DISTINCT 1
                 FROM  rhnServerPackage SP, rhnPackageName PN
                WHERE  S.id = SP.server_id
                  AND  SP.name_id = PN.id
                  AND  PN.name = 'rhncfg-actions') is not null then 'Y'
                 when (SELECT  DISTINCT 1
                          FROM  rhnServerAction SA, rhnActionPackage AP,
                                rhnPackageName PN, rhnActionStatus PAS
                         WHERE  S.id = SA.server_id
                           AND  SA.status = PAS.id
                           AND  PAS.name IN ('Queued', 'Picked Up')
                           AND  SA.action_id = AP.action_id
                           AND  AP.name_id = PN.id
                           AND  PN.name = 'rhncfg-actions') is not null then 'P' else 'N' end AS rhncfg_actions,
        case when (SELECT  DISTINCT 1
                 FROM  rhnServerPackage SP, rhnPackageName PN
                WHERE  S.id = SP.server_id
                  AND  SP.name_id = PN.id
                  AND  PN.name = 'rhncfg-client') is not null then 'Y'
                 when (SELECT  DISTINCT 1
                          FROM  rhnServerAction SA, rhnActionPackage AP,
                                rhnPackageName PN, rhnActionStatus PAS
                         WHERE  S.id = SA.server_id
                           AND  SA.status = PAS.id
                           AND  PAS.name IN ('Queued', 'Picked Up')
                           AND  SA.action_id = AP.action_id
                           AND  AP.name_id = PN.id
                           AND  PN.name = 'rhncfg-client') is not null then 'P' else 'N' end AS rhncfg_client,
        case when (SELECT  DISTINCT 1
                 FROM  rhnServerChannel SC, rhnChannel C
                WHERE  S.id = SC.server_id
                  AND  SC.channel_id = C.id
                  AND  C.label like 'rhn-tools%') is not null then 'Y' else 'N' end AS rhn_tools
  FROM  rhnServer S
 WHERE  S.id IN (%s)
</query>

<mode name="enable_config_summary" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query params="user_id, set">
  SELECT  S.id, S.name, ST.element_two AS error_code
    FROM  rhnSet ST, rhnServer S, rhnUserServerPerms USP
   WHERE  USP.user_id = :user_id
     AND  USP.server_id = S.id
     AND  ST.user_id = :user_id
     AND  ST.label = :set
     AND  USP.server_id = ST.element
ORDER BY  S.name
  </query>
</mode>

<mode name="system_config_enabled_check">
  <query params="user_id, sid">
  SELECT  count(CC.server_id) as count
    FROM  rhnClientCapability CC
                inner join  rhnClientCapabilityName CCN on CC.capability_name_id = CCN.id
            inner join rhnUserServerPerms USP on  CC.server_id = USP.server_id
   WHERE  USP.user_id = :user_id
                        AND CC.server_id = :sid
                        AND CCN.name LIKE 'configfiles%'
  </query>
</mode>


<mode name="latest_files_in_namespace" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="ccid,user_id">
SELECT CF.id,
           CF.latest_config_revision_id,
       CFN.path,
           CR.revision AS latest_config_revision,
       coalesce(CCon.modified, CR.modified) as modified,
       CFT.label as type
  FROM rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnConfigRevision CR LEFT OUTER JOIN rhnConfigContent CCon
       ON CR.config_content_id = CCon.id,
       rhnConfigFileType CFT
 WHERE rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
   AND CF.config_channel_id = :ccid
   AND CFN.id = CF.config_file_name_id
   AND CR.config_file_id = CF.id
   AND CF.latest_config_revision_id = CR.id
   AND CR.config_file_type_id = CFT.id
ORDER BY CFN.path
  </query>
</mode>

<mode name="latest_files_in_namespace_set" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="user_id,ccid,set_label">
SELECT CF.id,
           CF.latest_config_revision_id,
       CFN.path,
       CR.revision AS latest_config_revision,
       coalesce(CCon.modified, CR.modified) as modified,
           CFT.label as type
       FROM rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnConfigRevision CR LEFT OUTER JOIN rhnConfigContent CCon
       ON CR.config_content_id = CCon.id,
           rhnSet ST,
           rhnConfigFileType CFT
 WHERE rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
   AND ST.user_id = :user_id
   AND ST.label = :set_label
   AND ST.element = CF.id
   AND CF.config_channel_id = :ccid
   AND CFN.id = CF.config_file_name_id
   AND CR.config_file_id = CF.id
   AND CF.latest_config_revision_id = CR.id
   AND CFT.id = CR.config_file_type_id
ORDER BY CFN.path
  </query>
</mode>

<mode name="configfile_revisions" class="com.redhat.rhn.frontend.dto.ConfigRevisionDto">
  <query params="cfid, user_id">
SELECT CR.id,
       CR.created,
       CR.revision AS revision_number,
       coalesce(CCon.file_size,0) as file_size
  FROM rhnConfigRevision CR LEFT OUTER JOIN rhnConfigContent CCon
       ON CR.config_content_id = CCon.id
 WHERE rhn_config_channel.get_user_file_access(:cfid, :user_id) = 1
   AND CR.config_file_id = :cfid
ORDER BY CR.revision DESC
  </query>
</mode>

<mode name="configfile_revisions_size">
        <query params="cfid, user_id">
SELECT SUM(coalesce(CCon.file_size, 0)) AS total_file_size
FROM rhnConfigRevision CR LEFT OUTER JOIN rhnConfigContent CCon
ON CR.config_content_id = CCon.id
WHERE rhn_config_channel.get_user_file_access(:cfid, :user_id) = 1
   AND CR.config_file_id = :cfid
        </query>
</mode>

<mode name="configfiles_for_ssm" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
  <query params="user_id">
SELECT DISTINCT CFN.id, CFN.path
  FROM rhnConfigChannelType CCT,
       rhnConfigChannel CC,
       rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnServerConfigChannel SCC
 WHERE SCC.server_id IN (
       SELECT DISTINCT USP.server_id
         FROM rhnSet ST,
              rhnUserServerPerms USP
        WHERE USP.user_id = :user_id
          AND ST.user_id = :user_id
          AND ST.label = 'system_list'
          AND USP.server_id = ST.element
          AND rhn_server.system_service_level(USP.server_id, 'management') > 0
       )
   AND SCC.config_channel_id = CF.config_channel_id
   AND CF.config_file_name_id = CFN.id
   AND CF.config_channel_id = CC.id
   AND CC.confchan_type_id = CCT.id
   AND CCT.label in ('normal', 'local_override')
   AND rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
ORDER BY CFN.path
  </query>
  <elaborator params="user_id">
SELECT CFN.id, count(DISTINCT SCC.server_id) AS system_count
  FROM rhnConfigChannelType CCT,
       rhnConfigChannel CC,
       rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnServerConfigChannel SCC
 WHERE SCC.server_id IN (
       SELECT DISTINCT S.id
         FROM rhnServer S,
              rhnSet ST,
              rhnUserServerPerms USP
        WHERE USP.user_id = :user_id
          AND ST.user_id = :user_id
          AND ST.label = 'system_list'
          AND USP.server_id = ST.element
          AND rhn_server.system_service_level(USP.server_id, 'management') > 0
          AND USP.server_id = S.id
       )
   AND CFN.id IN (%s)
   AND SCC.config_channel_id = CF.config_channel_id
   AND CF.config_file_name_id = CFN.id
   AND CF.config_channel_id = CC.id
   AND CC.confchan_type_id = CCT.id
   AND CCT.label in ('normal', 'local_override')
 GROUP BY CFN.id
 </elaborator>
</mode>

<mode name="config_systems_for_ssm" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query params="user_id, system_set_label, name_set_label, feature">
SELECT  S.id, S.name, count(DISTINCT CF.config_file_name_id) AS config_file_count
  FROM  rhnServer S
                inner join rhnSet ST on ST.element = S.id
                inner join rhnServerConfigChannel SCC on S.id = SCC.server_id
                inner join rhnConfigFile CF on SCC.config_channel_id = CF.config_channel_id
                inner join rhnSet STX on CF.config_file_name_id = STX.element
                inner join rhnUserServerPerms USP on S.id = USP.server_id
                inner join rhnClientCapability CC on cc.server_id = S.id
                inner join rhnClientCapabilityName CCN on  CC.capability_name_id = CCN.id
 WHERE  ST.user_id = :user_id
   AND  ST.label = :system_set_label
   AND  USP.user_id = :user_id
   AND  STX.user_id = :user_id
   AND  STX.label = :name_set_label
   AND  CCN.name = :feature
 GROUP BY S.id, S.name
 ORDER BY S.name
  </query>
</mode>

<mode name="global_configfiles_for_user" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="org_id, user_id">
SELECT CF.id, CFN.path
  FROM rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnConfigChannel CC,
       rhnConfigChannelType CCT
 WHERE CC.org_id = :org_id
   AND CF.config_channel_id = CC.id
   AND CC.confchan_type_id = CCT.id
   AND CCT.label = 'normal'
   AND rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
   AND CF.config_file_name_id = CFN.id
ORDER BY UPPER(CFN.path)
  </query>
 <elaborator params="user_id">
SELECT CF.id, CFT.label AS type,
       CC.name AS config_channel_name,
       CC.id AS config_channel_id,
       COALESCE( (SELECT count(SCC.server_id)
               FROM rhnServerConfigChannel SCC
              WHERE CC.id = SCC.config_channel_id), 0) system_count,
       COALESCE( (SELECT count(SCC.server_id)
              FROM rhnServerConfigChannel SCC, rhnServerConfigChannel SCC2,
                   rhnConfigFile CF, rhnConfigChannel CC2,
                   rhnConfigChannelType CCT
             WHERE CFN.id = CF.config_file_name_id
               AND CF.config_channel_id = CC2.id
               AND CC2.confchan_type_id = CCT.id
               AND CCT.label = 'local_override'
               AND CC2.id = SCC.config_channel_id
               AND SCC.server_id = SCC2.server_id
               AND SCC2.config_channel_id = CC.id), 0) override_count
  FROM rhnConfigFileName CFN, rhnConfigFile CF, rhnConfigChannel CC,
       rhnConfigRevision CR, rhnConfigFileType CFT
 WHERE CF.id IN (%s)
   AND CF.latest_config_revision_id = CR.id
   AND CR.config_file_type_id = CFT.id
   AND CF.config_channel_id = CC.id
   AND CF.config_file_name_id = CFN.id
   AND rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
GROUP BY CF.id, CFN.id, CC.name, CC.id, CFT.label
 </elaborator>
</mode>

<mode name="local_configfiles_for_user" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
<query params="user_id, org_id">
SELECT CF.id, CFN.path, S.id AS server_id, S.name AS server_name,
       CFT.label as type
  FROM rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnConfigChannel CC,
       rhnConfigChannelType CCT,
       rhnServerConfigChannel SCC,
       rhnServer S,
       rhnConfigRevision CR,
       rhnConfigFileType CFT
 WHERE CC.org_id = :org_id
   AND CF.config_channel_id = CC.id
   AND CC.confchan_type_id = CCT.id
   AND CCT.label = 'local_override'
   AND rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
   AND CF.config_file_name_id = CFN.id
   AND CF.latest_config_revision_id = CR.id
   AND CR.config_file_type_id = CFT.id
   AND CC.id = SCC.config_channel_id
   AND SCC.server_id = S.id
ORDER BY UPPER(CFN.path)
</query>
</mode>

<mode name="org_configfile_size_totals" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="org_id, user_id">
SELECT DISTINCT CF.id AS id,
       CFN.path,
       CC.label AS CONFIG_CHANNEL_LABEL,
       CC.id AS CONFIG_CHANNEL_ID,
       CF.latest_config_revision_id,
       LCR.revision AS latest_config_revision,
       CFT.label AS type,
       CCT.label AS config_channel_type,
       CC.name AS CONFIG_CHANNEL_NAME,
       SUM(Coalesce(CCon.file_size,0)) AS total_file_size
  FROM rhnConfigContent CCon LEFT OUTER JOIN rhnConfigRevision CR
       ON CCon.id = CR.config_content_id,
       rhnConfigChannelType CCT,
       rhnConfigRevision LCR,
       rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnConfigChannel CC,
       rhnConfigFileType CFT
 WHERE CC.org_id = :org_id
   AND rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
   AND CF.config_channel_id = CC.id
   AND CFN.id = CF.config_file_name_id
   AND LCR.id = CF.latest_config_revision_id
   AND LCR.config_file_type_id = CFT.id
   AND CR.config_file_id = CF.id
   AND CC.confchan_type_id = CCT.id
GROUP BY CF.id, CFN.path, CC.name, CC.label, CFT.label, CCT.label, CC.id, CF.latest_config_revision_id, LCR.revision
ORDER BY total_file_size DESC
  </query>
</mode>

<mode name="count_managed_servers_for_user">
  <query params="user_id">
SELECT  count(distinct S.id) AS count
  FROM  rhnServer S, rhnUserServerPerms USP, rhnServerConfigChannel SCC, rhnConfigFile CF
 WHERE  USP.user_id = :user_id
   AND  S.id = USP.server_id
   AND  S.id = SCC.server_id
   AND  SCC.config_channel_id = CF.config_channel_id
  </query>
</mode>

<mode name="count_config_channels_for_user">
  <query params="org_id, user_id">
SELECT  count(CC.id) AS count
  FROM  rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  CC.org_id = :org_id
   AND  CC.confchan_type_id = CCT.id
   AND  CCT.label = 'normal'
   AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
  </query>
</mode>

<mode name="count_global_config_files_for_user">
  <query params="org_id, user_id">
SELECT  count(CF.id) AS count
  FROM  rhnConfigFile CF, rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  CC.org_id = :org_id
   AND  CC.confchan_type_id = CCT.id
   AND  CCT.label = 'normal'
   AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
   AND  CC.id = CF.config_channel_id
  </query>
</mode>

<mode name="count_local_config_files_for_user">
  <query params="org_id, user_id">
SELECT  count(CF.id) AS count
  FROM  rhnConfigFile CF, rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  CC.org_id = :org_id
   AND  CC.confchan_type_id = CCT.id
   AND  CCT.label != 'normal'
   AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
   AND  CC.id = CF.config_channel_id
  </query>
</mode>

<!-- Given a cfg-file-name and a system-id, return all successful deploy actions for files with that name -->
<mode name="successful_deploys_for" class="com.redhat.rhn.frontend.dto.LastDeployDto">
        <query params="cfnid, sid, user_id">
SELECT  CF.id AS file_id,
                CR.id AS rev_id,
                SA.completion_time AS when,
                CC.id AS whence_id,
                WC.login AS who
FROM    rhnAction A,
                rhnActionType AT,
                rhnActionConfigRevision ACR,
                rhnConfigChannel CC,
                rhnConfigRevision CR,
                rhnConfigFile CF,
                rhNConfigFileName CFN,
                rhnActionStatus RAS,
        rhnServerAction SA,
                rhnUserServerPerms USP,
                web_contact WC
WHERE USP.user_id = :user_id
  AND USP.server_id = :sid
  AND ACR.server_id = :sid
  AND CFN.id = :cfnid
  AND CF.config_file_name_id = CFN.id
  AND CR.config_file_id = CF.id
  AND ACR.config_revision_id = CR.id
  AND CC.id = CF.config_channel_id
  AND A.id = ACR.action_id
  AND AT.label = 'configfiles.deploy'
  AND A.action_type = AT.id
  AND SA.action_id = A.id
  AND SA.status = RAS.id
  AND RAS.name = 'Completed'
  AND A.scheduler = WC.id
ORDER BY SA.completion_time DESC
        </query>
</mode>

<mode name="recent_config_deploy_actions_for_user_oracle" class="com.redhat.rhn.frontend.dto.ServerActionDto">
  <query params="user_id, org_id, num, date">
    SELECT * FROM
        (SELECT   S.id AS server_id, S.name AS server_name,
                  A.id AS id, RAS.name AS status,
                  A.scheduler AS scheduled_by_id,
                  A.earliest_action AS earliest, WC.login AS scheduled_by_name,
                  (SELECT  count(ACR.config_revision_id)
                     FROM  rhnActionConfigRevision ACR
                    WHERE  ACR.action_id = A.id) file_count
            FROM  rhnAction A inner join
                  rhnServerAction SA on SA.action_id = A.id inner join
                  rhnActionStatus RAS on SA.status = RAS.id inner join
                  rhnServer S on SA.server_id = S.id inner join
                  rhnUserServerPerms USP on S.id = USP.server_id  inner join
                  web_contact WC on A.scheduler = WC.id
           WHERE  A.Action_type = ( select id from rhnActionType where label = 'configfiles.deploy' )
             AND  A.org_id = :org_id
             AND  USP.user_id = :user_id
             AND  A.earliest_action &gt; TO_TIMESTAMP(:date, 'YYYY-MM-DD HH24:MI:SS')
             ORDER BY A.earliest_action desc ) TC
             where rownum &lt;= :num
  </query>
</mode>

<mode name="recent_config_deploy_actions_for_user_postgres" class="com.redhat.rhn.frontend.dto.ServerActionDto">
  <query params="user_id, org_id, num, date">
         SELECT   S.id AS server_id, S.name AS server_name,
                  A.id AS id, RAS.name AS status,
                  A.scheduler AS scheduled_by_id,
                  A.earliest_action AS earliest, WC.login AS scheduled_by_name,
                  (SELECT  count(ACR.config_revision_id)
                     FROM  rhnActionConfigRevision ACR
                    WHERE  ACR.action_id = A.id) file_count
            FROM  rhnAction A inner join
                  rhnServerAction SA on SA.action_id = A.id inner join
                  rhnActionStatus RAS on SA.status = RAS.id inner join
                  rhnServer S on SA.server_id = S.id inner join
                  rhnUserServerPerms USP on S.id = USP.server_id  inner join
                  web_contact WC on A.scheduler = WC.id
           WHERE  A.Action_type = ( select id from rhnActionType where label = 'configfiles.deploy' )
             AND  A.org_id = :org_id
             AND  USP.user_id = :user_id
             AND  A.earliest_action &gt; TO_TIMESTAMP(:date, 'YYYY-MM-DD HH24:MI:SS')
             ORDER BY A.earliest_action desc
             LIMIT :num
  </query>
</mode>

<mode name="recent_modified_config_files_for_user_oracle" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="org_id, user_id, num">
SELECT DISTINCT TC.*
from  (select CF.id, CC.id AS config_channel_id, CFT.label AS type,
              CFN.path, CCT.label AS config_channel_type, CF.modified,
              CC.name AS config_channel_name
         from rhnConfigFile CF, rhnConfigChannel CC, rhnConfigFileName CFN,
              rhnConfigChannelType CCT, rhnConfigRevision CR, rhnConfigFileType CFT
        where CF.config_channel_id = CC.id
          and CC.org_id = :org_id
          and CC.confchan_type_id = CCT.id
          and CF.config_file_name_id = CFN.id
          and CF.latest_config_revision_id = CR.id
          and CR.config_file_type_id = CFT.id
          and rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
     order by CF.modified desc) TC
where rownum &lt;= :num
  </query>
</mode>

<mode name="recent_modified_config_files_for_user_postgres" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="org_id, user_id, num">
       select CF.id, CC.id AS config_channel_id, CFT.label AS type,
              CFN.path, CCT.label AS config_channel_type, CF.modified,
              CC.name AS config_channel_name
         from rhnConfigFile CF, rhnConfigChannel CC, rhnConfigFileName CFN,
              rhnConfigChannelType CCT, rhnConfigRevision CR, rhnConfigFileType CFT
        where CF.config_channel_id = CC.id
          and CC.org_id = :org_id
          and CC.confchan_type_id = CCT.id
          and CF.config_file_name_id = CFN.id
          and CF.latest_config_revision_id = CR.id
          and CR.config_file_type_id = CFT.id
          and rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
     order by CF.modified desc
        limit :num
  </query>
</mode>

<mode name="systems_subscribed_to_channel">
        <query params="ccid, user_id">
SELECT COUNT(*) AS num_systems
 FROM rhnserverconfigchannel SCC
 WHERE SCC.config_channel_id = :ccid
   AND EXISTS (SELECT 1 FROM rhnUserServerPerms USP WHERE USP.user_id = :user_id AND USP.server_id = SCC.server_id)
        </query>
</mode>

<mode name="ssm_systems_for_subscribe" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query params="system_set_label, user_id">
SELECT  S.id, S.name
  FROM  rhnSet ST, rhnServer S
 WHERE  ST.label = :system_set_label
   AND  ST.user_id = :user_id
   AND  ST.element = S.id
   AND EXISTS(SELECT 1 FROM rhnServerFeaturesView SFV WHERE SFV.server_id = ST.element AND SFV.label = 'ftr_config')
ORDER BY S.name
  </query>
  <elaborator params="channel_set_label, user_id">
SELECT  S.id,
        (SELECT  count(SCC.server_id)
           FROM  rhnServerConfigChannel SCC, rhnSet ST
          WHERE  SCC.server_id = S.id
            AND  SCC.config_channel_id = ST.element
            AND  ST.user_id = :user_id
            AND  ST.label = :channel_set_label ) AS config_channel_count
  FROM  rhnServer S
 WHERE  S.id IN (%s)
  </elaborator>
</mode>

<mode name="systems_subscribed_by_date"  class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
        <query params="ccid, user_id">
SELECT S.id,
           S.name,
           SCC.modified
 FROM rhnserverconfigchannel SCC,
          rhnserver S
 WHERE rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
   AND SCC.config_channel_id = :ccid
   AND S.id = SCC.server_id
   AND EXISTS (SELECT 1 FROM rhnUserServerPerms USP WHERE USP.user_id = :user_id AND USP.server_id = SCC.server_id)
 ORDER BY SCC.modified DESC
        </query>
</mode>

<mode name="files_in_channel">
        <query params="ccid, filetype, user_id">
SELECT COUNT(CF.id) AS num_files
 FROM rhnconfigfile CF,
          rhnconfigrevision CR,
          rhnconfigfiletype CFT
 WHERE CF.config_channel_id = :ccid
   AND CF.latest_config_revision_id = CR.id
   AND CR.config_file_type_id = CFT.id
   AND CFT.label = :filetype
   AND rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
        </query>
</mode>

<mode name="files_by_date"  class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="ccid, user_id">
SELECT CR.id, CFN.path, coalesce(CCon.modified, CR.modified) as modified
  FROM rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnConfigRevision CR LEFT OUTER JOIN rhnConfigContent CCon
       ON CR.config_content_id = CCon.id,
       rhnConfigChannel CC
 WHERE CC.id = :ccid
   AND CF.config_channel_id = CC.id
   AND CFN.id = CF.config_file_name_id
   AND CR.config_file_id = CF.id
   AND CF.latest_config_revision_id = CR.id
   AND rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
ORDER BY modified DESC
  </query>
</mode>

<callable-mode name="lookup_config_info">
  <query params="username_in, groupname_in, filemode_in, selinuxCtx_in, symlink_target_file_in">
      {:info_id = call lookup_config_info( :username_in, :groupname_in, :filemode_in, :selinuxCtx_in, :symlink_target_file_in)}
  </query>
</callable-mode>

<callable-mode name="user_channel_access">
  <query params="user_id, channel_id">
      {:access = call rhn_config_channel.get_user_chan_access(:channel_id, :user_id)}
  </query>
</callable-mode>

<callable-mode name="user_file_access">
  <query params="user_id, file_id">
      {:access = call rhn_config_channel.get_user_file_access(:file_id, :user_id)}
  </query>
</callable-mode>

<callable-mode name="user_revision_access">
  <query params="user_id, revision_id">
      {:access = call rhn_config_channel.get_user_revision_access(:revision_id, :user_id)}
  </query>
</callable-mode>

<mode name="compare_revision_list" class="com.redhat.rhn.frontend.dto.ConfigRevisionDto">
  <query params="cfid, crid, user_id">
  SELECT  CR.revision AS revision_number, CR.id, CR.created
    FROM  rhnConfigRevision CR
   WHERE  rhn_config_channel.get_user_file_access(:cfid, :user_id) = 1
         AND  CR.config_file_id = :cfid
     AND  CR.id != :crid
ORDER BY  CR.revision DESC
  </query>
</mode>

<mode name="compare_alternate_file_list" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="cfid, user_id, org_id">
  SELECT  DISTINCT CR.revision AS config_revision, CR.id AS config_revision_id,
          CC.id, CCT.label AS type, CC.name, CFT.label AS config_file_type
    FROM  rhnConfigRevision CR, rhnConfigChannel CC,
          rhnConfigFile CF, rhnConfigFile CFX,
          rhnConfigChannelType CCT, rhnConfigFileType CFT
   WHERE  CFX.id = :cfid
     AND  CFX.config_file_name_id = CF.config_file_name_id
     AND  CF.config_channel_id = CC.id
     AND  CC.org_id = :org_id
     AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
     AND  CF.id != CFX.id
     AND  CF.latest_config_revision_id = CR.id
     AND  CC.confchan_type_id = CCT.id
     AND  CR.config_file_type_id = CFT.id
ORDER BY  name
  </query>
</mode>

<mode name="compare_other_channel_list" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="user_id, org_id">
  SELECT  DISTINCT CC.id, CC.name
    FROM  rhnConfigChannel CC
   WHERE  CC.org_id = :org_id
     AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
     AND  EXISTS (SELECT  DISTINCT 1
                    FROM  rhnConfigFile CF
                   WHERE  CC.id = CF.config_channel_id )
ORDER BY  name
  </query>
  <elaborator>
SELECT  CCT.label AS type, CC.id,
        COALESCE((SELECT  COUNT(CF.id)
                 FROM  rhnConfigFile CF
                WHERE  CF.config_channel_id = CC.id), 0) FILE_COUNT
  FROM  rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  CC.id IN (%s)
   AND  CC.confchan_type_id = CCT.id
  </elaborator>
</mode>

<mode name="compare_other_file_list" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="ccid, user_id">
  SELECT  CFN.path, CF.id
    FROM  rhnConfigFile CF, rhnConfigChannel CC, rhnConfigFileName CFN
   WHERE  CC.id = :ccid
     AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
     AND  CC.id = CF.config_channel_id
     AND  CF.config_file_name_id = CFN.id
ORDER BY  CFN.path
  </query>
  <elaborator>
SELECT  CF.id, CR.modified,
        CR.revision AS latest_config_revision,
        CR.id AS latest_config_revision_id,
        coalesce(CCon.file_size,0) AS latest_revision_size,
        CFT.label AS type
  FROM  rhnConfigFile CF,
        rhnConfigRevision CR LEFT OUTER JOIN rhnConfigContent CCon
        ON CR.config_content_id = CCon.id,
        rhnConfigFileName CFN,
        rhnConfigFileType CFT
 WHERE  CF.id IN (%s)
   AND  CF.config_file_name_id = CFN.id
   AND  CF.latest_config_revision_id = CR.id
   AND  CR.config_file_type_id = CFT.id
  </elaborator>
</mode>

<!-- All systems accessible to the specified user -->
  <query name="find_systems" params="user_id">
  SELECT  DISTINCT S.name, S.id
    FROM  rhnServer S
        inner join rhnUserServerPerms USP on USP.server_id = S.id
        inner join rhnServerFeaturesView SFV on SFV.server_id = s.id
   WHERE  USP.user_id = :user_id
     AND  S.id = USP.server_id
     AND SFV.label = 'ftr_config'
ORDER BY  S.name
  </query>

<mode name="systems_for_copy" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
        <query name="find_systems"></query>
        <elaborator params="cfnid,label">
SELECT  S.id,
                CC.id AS config_channel_id,
        CF.id AS config_file_id,
        CR.id AS config_revision_id,
                CR.revision AS config_revision
  FROM  rhnConfigChannel CC,
                rhnConfigChannelType CCT,
                rhnConfigRevision CR,
                rhnConfigFile CF,
                rhnServer S,
                rhnServerConfigChannel SCC
 WHERE  S.id IN (%s)
   AND  SCC.server_id = S.id
   AND  CC.id = SCC.config_channel_id
   AND  CCT.label = :label
   AND  CC.confchan_type_id = CCT.id
   AND  CF.config_channel_id = CC.id
   AND  CF.config_file_name_id = :cfnid
   AND  CR.id = CF.latest_config_revision_id
   </elaborator>
</mode>

<mode name="list_available_systems" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
        <query name="find_systems"></query>
</mode>

<mode name="systems_for_diff" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query name="find_systems"></query>
  <elaborator params="cfnid">
SELECT  DISTINCT S.id, CR.revision AS config_revision,
        CR.id AS config_revision_id,
        CF.id AS config_file_id,
        CC.id AS config_channel_id,
        CCT.label AS config_channel_type,
        CC.name AS config_channel_name
  FROM  rhnServer S, rhnActionConfigRevision ACR,
        rhnConfigRevision CR, rhnConfigFile CF,
        rhnAction A, rhnActionType ATP, rhnServerAction SA,
        rhnActionStatus AST, rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  S.id IN (%s)
   AND  S.id = ACR.server_id
   AND  ACR.config_revision_id = CR.id
   AND  CR.config_file_id = CF.id
   AND  CF.config_file_name_id = :cfnid
   AND  ACR.action_id = A.id
   AND  A.action_type = ATP.id
   AND  ATP.label = 'configfiles.deploy'
   AND  A.id = SA.action_id
   AND  SA.server_id = S.id
   AND  SA.status = AST.id
   AND  AST.name = 'Completed'
   AND  SA.completion_time = ( SELECT  MAX(SAX.completion_time)
                                   FROM  rhnServerAction SAX
                                  WHERE  A.id = SAX.action_id
                                    AND  S.id = SAX.server_id)
   AND  CF.config_channel_id = CC.id
   AND  CC.confchan_type_id = CCT.id
  </elaborator>
</mode>

<mode name="deployable_revision_for_system">
  <query params="sid, cfnid">
SELECT  COALESCE( ( SELECT  CR.id
                 FROM  rhnConfigChannel CC, rhnConfigChannelType CCT,
                       rhnConfigRevision CR, rhnServerConfigChannel SCC, rhnConfigFile CF
                WHERE  SCC.server_id = :sid
                  AND  CF.config_channel_id = SCC.config_channel_id
                  AND  CF.config_file_name_id = :cfnid
                  AND  SCC.config_channel_id = CC.id
                  AND  CC.confchan_type_id = CCT.id
                  AND  CCT.label = 'local_override'
                  AND  CF.latest_config_revision_id = CR.id) ,
             ( SELECT  CR.id
                 FROM  rhnConfigRevision CR, rhnServerConfigChannel SCC, rhnConfigFile CF
                WHERE  CF.latest_config_revision_id = CR.id
                  AND  CF.config_file_name_id = :cfnid
                  AND  CF.config_channel_id = SCC.config_channel_id
                  AND  SCC.server_id = :sid
                  AND  SCC.position = ( SELECT  min(SCC.position)
                                          FROM  rhnServerConfigChannel SCC, rhnConfigFile CF
                                         WHERE  SCC.server_id = :sid
                                           AND  CF.config_channel_id = SCC.config_channel_id
                                           AND  CF.config_file_name_id = :cfnid ) ) ) AS id
  FROM  dual
  </query>
</mode>

<mode name="systems_in_set_with_file_name" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query params="cfnid, user_id, system_set_label">
SELECT  S.id, S.name
  FROM  rhnSet ST, rhnServer S, rhnUserServerPerms USP
 WHERE  ST.label = :system_set_label
   AND  ST.user_id = :user_id
   AND  ST.element = S.id
   AND  USP.server_id = S.id
   AND  USP.user_id = :user_id
   AND  EXISTS ( SELECT  1
                   FROM  rhnServerConfigChannel SCC, rhnConfigFile CF
                  WHERE  SCC.server_id = S.id
                    AND  SCC.config_channel_id = CF.config_channel_id
                    AND  CF.config_file_name_id = :cfnid )
ORDER BY S.name
  </query>
  <elaborator params="cfnid">
SELECT  S.id, CR.id AS config_revision_id, CR.revision AS config_revision,
        CF.id AS config_file_id, CC.id AS config_channel_id,
        CC.name AS config_channel_name, CCT.label AS config_channel_type
  FROM  rhnServer S, rhnConfigRevision CR, rhnConfigFile CF,
        rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  S.id IN (%s)
   AND  CR.id = ( SELECT  COALESCE( ( SELECT  CR.id
                                   FROM  rhnConfigChannel CC, rhnConfigChannelType CCT,
                                         rhnConfigRevision CR, rhnServerConfigChannel SCC, rhnConfigFile CF
                                  WHERE  SCC.server_id = SX.id
                                    AND  CF.config_channel_id = SCC.config_channel_id
                                    AND  CF.config_file_name_id = :cfnid
                                    AND  SCC.config_channel_id = CC.id
                                    AND  CC.confchan_type_id = CCT.id
                                    AND  CCT.label = 'local_override'
                                    AND  CF.latest_config_revision_id = CR.id) ,
                               ( SELECT  CR.id
                                   FROM  rhnConfigRevision CR, rhnServerConfigChannel SCC, rhnConfigFile CF
                                  WHERE  CF.latest_config_revision_id = CR.id
                                    AND  CF.config_file_name_id = :cfnid
                                    AND  CF.config_channel_id = SCC.config_channel_id
                                    AND  SCC.server_id = SX.id
                                    AND  SCC.position = ( SELECT  min(SCC.position)
                                                            FROM  rhnServerConfigChannel SCC, rhnConfigFile CF
                                                           WHERE  SCC.server_id = SX.id
                                                             AND  CF.config_channel_id = SCC.config_channel_id
                                                             AND  CF.config_file_name_id = :cfnid ) ) ) AS config_revision_id
                    FROM  rhnServer SX
                   WHERE  SX.id = S.id )
   AND  CR.id = CF.latest_config_revision_id
   AND  CF.config_channel_id = CC.id
   AND  CC.confchan_type_id = CCT.id
  </elaborator>
</mode>

<mode name="file_names_in_set_for_system" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
  <query params="sid, user_id, name_set_label">
SELECT  CFN.id, CFN.path
  FROM  rhnSet ST, rhnConfigFileName CFN
 WHERE  ST.label = :name_set_label
   AND  ST.user_id = :user_id
   AND  ST.element = CFN.id
   AND  EXISTS ( SELECT  1
                   FROM  rhnServerConfigChannel SCC, rhnConfigFile CF
                  WHERE  SCC.server_id = :sid
                    AND  SCC.config_channel_id = CF.config_channel_id
                    AND  CF.config_file_name_id = CFN.id )
ORDER BY CFN.path
  </query>
  <elaborator name="file_name_elab" />
</mode>

<mode name="automated_file_names_for_system" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
  <query params="sid">
SELECT  DISTINCT CFN.id, CFN.path
  FROM  rhnConfigFileName CFN, rhnServerConfigChannel SCC,
        rhnConfigFile CF, rhnUserServerPerms USP,
        rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  SCC.server_id = :sid
   AND  USP.server_id = SCC.server_id
   AND  SCC.config_channel_id = CF.config_channel_id
   AND  SCC.config_channel_id = CC.id
   AND  CC.confchan_type_id = CCT.id
   AND  CCT.label != 'server_import'
   AND  CF.config_file_name_id = CFN.id
ORDER BY CFN.path
  </query>
  <elaborator name="file_name_elab" />
</mode>

<mode name="file_names_for_system" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
  <query params="sid, user_id">
SELECT  DISTINCT CFN.id, CFN.path
  FROM  rhnConfigFileName CFN, rhnServerConfigChannel SCC,
        rhnConfigFile CF, rhnUserServerPerms USP,
        rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  SCC.server_id = :sid
   AND  USP.server_id = SCC.server_id
   AND  USP.user_id = :user_id
   AND  SCC.config_channel_id = CF.config_channel_id
   AND  SCC.config_channel_id = CC.id
   AND  CC.confchan_type_id = CCT.id
   AND  CCT.label != 'server_import'
   AND  CF.config_file_name_id = CFN.id
ORDER BY CFN.path
  </query>
  <elaborator name="file_name_elab" />
</mode>

<mode name="file_names_for_system_quick" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
  <query params="sid, user_id">
select cc.label as config_channel_label,
       cft.label AS config_file_type,
       cr.modified as last_modified_date,
       cc.name AS config_channel_name,
       cct.label AS config_channel_type,
       cfn.path
  from rhnConfigChannel cc,
       rhnConfigChannelType cct,
       rhnConfigFileType cft,
       rhnConfigRevision cr,
       rhnConfigFile cf,
       rhnConfigFileName cfn,
       rhnServerConfigChannel scc,
       (select  cf.config_file_name_id as id, min(scc.position) as position
          FROM  rhnServerConfigChannel SCC,
                rhnConfigFile CF, rhnUserServerPerms USP,
                rhnConfigChannel CC, rhnConfigChannelType CCT
         WHERE  SCC.server_id = :sid
           AND  USP.server_id = SCC.server_id
           AND  USP.user_id = :user_id
           AND  SCC.config_channel_id = CF.config_channel_id
           AND  SCC.config_channel_id = CC.id
           AND  CC.confchan_type_id = CCT.id
           AND  CCT.label != 'server_import'
           group by cf.config_file_name_id) tmp
 where tmp.id = cfn.id
   and (scc.position = tmp.position
        or (scc.position is null and tmp.position is null))
   and scc.config_channel_id = cc.id
   and scc.server_id = :sid
   and cc.confchan_type_id = cct.id
   and cf.latest_config_revision_id = cr.id
   and cf.config_channel_id = cc.id
   and cf.config_file_name_id = cfn.id
   and cr.config_file_type_id = cft.id
order by cfn.path
  </query>
</mode>

<mode name="file_names_for_system_channel" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
  <query params="sid, ccid, user_id">
SELECT  DISTINCT CFN.id, CFN.path
  FROM  rhnConfigFileName CFN, rhnServerConfigChannel SCC,
        rhnConfigFile CF, rhnUserServerPerms USP,
        rhnConfigChannel CC, rhnConfigChannelType CCT
 WHERE  SCC.server_id = :sid
   AND  CC.id = :ccid
   AND  USP.server_id = SCC.server_id
   AND  USP.user_id = :user_id
   AND  SCC.config_channel_id = CF.config_channel_id
   AND  SCC.config_channel_id = CC.id
   AND  CC.confchan_type_id = CCT.id
   AND  CCT.label != 'server_import'
   AND  CF.config_file_name_id = CFN.id
ORDER BY CFN.path
  </query>
  <elaborator name="file_name_elab" />
</mode>

<mode name="file_names_in_set" class="com.redhat.rhn.frontend.dto.ConfigFileNameDto">
  <query params="user_id, name_set_label">
SELECT  CFN.id, CFN.path
  FROM  rhnSet ST, rhnConfigFileName CFN
 WHERE  ST.label = :name_set_label
   AND  ST.user_id = :user_id
   AND  ST.element = CFN.id
ORDER BY CFN.path
  </query>
  <elaborator name="file_name_elab" />
</mode>

<query name="file_name_elab" params="sid">
SELECT  CFN.id, CR.id AS config_revision_id, CR.revision AS config_revision,
        CF.id AS config_file_id, CC.id AS config_channel_id,
        CC.name AS config_channel_name, CCT.label AS config_channel_type,
        CFT.label AS config_file_type, cc.label as config_channel_label, cr.modified as last_modified_date
  FROM  rhnConfigRevision CR, rhnConfigFile CF,
        rhnConfigChannel CC, rhnConfigFileName CFN,
        rhnConfigChannelType CCT, rhnConfigFileType CFT
 WHERE  CFN.id IN (%s)
   AND  CR.id = ( SELECT  COALESCE( ( SELECT  CR.id
                                   FROM  rhnConfigChannel CC, rhnConfigChannelType CCT,
                                         rhnConfigRevision CR, rhnServerConfigChannel SCC, rhnConfigFile CF
                                  WHERE  SCC.server_id = :sid
                                    AND  CF.config_channel_id = SCC.config_channel_id
                                    AND  CF.config_file_name_id = CFNX.id
                                    AND  SCC.config_channel_id = CC.id
                                    AND  CC.confchan_type_id = CCT.id
                                    AND  CCT.label = 'local_override'
                                    AND  CF.latest_config_revision_id = CR.id) ,
                               ( SELECT  CR.id
                                   FROM  rhnConfigRevision CR, rhnServerConfigChannel SCC, rhnConfigFile CF
                                  WHERE  CF.latest_config_revision_id = CR.id
                                    AND  CF.config_file_name_id = CFNX.id
                                    AND  CF.config_channel_id = SCC.config_channel_id
                                    AND  SCC.server_id = :sid
                                    AND  SCC.position = ( SELECT  min(SCC.position)
                                                            FROM  rhnServerConfigChannel SCC, rhnConfigFile CF
                                                           WHERE  SCC.server_id = :sid
                                                             AND  CF.config_channel_id = SCC.config_channel_id
                                                             AND  CF.config_file_name_id = CFNX.id ) ) ) AS config_revision_id
                    FROM  rhnConfigFileName CFNX
                   WHERE  CFNX.id = CFN.id )
   AND  CR.id = CF.latest_config_revision_id
   AND  CR.config_file_type_id = CFT.id
   AND  CF.config_channel_id = CC.id
   AND  CC.confchan_type_id = CCT.id
</query>

<mode name="ssm_config_channels" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="org_id, user_id">
SELECT CC.id,
       CC.org_id,
       CC.name,
       CC.label,
       CC.description,
       CC.created,
       CC.modified,
       COALESCE( (
             SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
            ), 0) AS file_count
  FROM rhnConfigChannelType CCT,
       rhnConfigChannel CC
 WHERE CC.org_id = :org_id
   AND CC.confchan_type_id = CCT.id
   AND CCT.label IN ('normal')
   AND rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
   AND EXISTS ( SELECT 1
                  FROM rhnSet ST, rhnServerConfigChannel SCC
                 WHERE ST.label = 'system_list'
                   AND ST.user_id = :user_id
                   AND ST.element = SCC.server_id
                   AND SCC.config_channel_id = CC.id )
GROUP BY CC.id, CC.org_id, CC.name, CC.label, CC.description, CC.created, CC.modified
ORDER BY UPPER(CC.name)
  </query>
  <elaborator params="user_id">
SELECT CC.id AS ID,
       (SELECT count(SCC.server_id)
          FROM rhnServerConfigChannel SCC,
               rhnUserServerPerms USP, rhnSet ST
         WHERE ST.user_id = :user_id
           AND ST.label = 'system_list'
           AND ST.element = USP.server_id
           AND USP.user_id = :user_id
           AND USP.server_id = SCC.server_id
           AND SCC.config_channel_id = CC.id) AS system_count
  FROM rhnConfigChannel CC
 WHERE CC.id IN (%s)
  </elaborator>
</mode>

<mode name="ssm_systems_for_config_channels" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query params="user_id, system_set_label, channel_set_label">
SELECT  S.name, S.id
  FROM  rhnServer S, rhnSet ST,
        rhnUserServerPerms USP
 WHERE  ST.user_id = :user_id
   AND  ST.label = :system_set_label
   AND  ST.element = S.id
   AND  USP.server_id = S.id
   AND  USP.user_id = :user_id
   AND  EXISTS( SELECT  1
                  FROM  rhnServerConfigChannel SCC, rhnSet ST
                 WHERE  SCC.server_id = S.id
                   AND  SCC.config_channel_id = ST.element
                   AND  ST.user_id = :user_id
                   AND  ST.label = :channel_set_label )
ORDER BY S.name
  </query>
  <elaborator params="user_id, channel_set_label">
SELECT  S.id,
        ( SELECT  count(SCC.config_channel_id)
            FROM  rhnServerConfigChannel SCC, rhnSet ST
           WHERE  SCC.server_id = S.id
             AND  SCC.config_channel_id = ST.element
             AND  ST.user_id = :user_id
             AND  ST.label = :channel_set_label ) AS config_channel_count
  FROM  rhnServer S
 WHERE  S.id IN (%s)
  </elaborator>
</mode>

<mode name="systems_for_channel_in_set" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
  <query params="ccid, user_id, system_set_label">
SELECT  S.name, S.id
  FROM  rhnServer S, rhnSet ST,
        rhnUserServerPerms USP,
        rhnServerConfigChannel SCC
 WHERE  rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
   and  ST.user_id = :user_id
   AND  ST.label = :system_set_label
   AND  ST.element = S.id
   AND  USP.server_id = S.id
   AND  USP.user_id = :user_id
   AND  SCC.server_id = S.id
   AND  SCC.config_channel_id = :ccid
ORDER BY S.name
  </query>
  <elaborator params="ccid">
SELECT  SCC.server_id AS id,
        ( SELECT  count(CFN.id)
            FROM  rhnConfigFileName CFN, rhnConfigFile CF
           WHERE  CF.config_file_name_id = CFN.id
             AND  CF.config_channel_id = SCC.config_channel_id
             AND  SCC.config_channel_id = ( SELECT  COALESCE( ( SELECT  CC.id
                                                             FROM  rhnConfigChannel CC, rhnConfigChannelType CCT,
                                                                   rhnServerConfigChannel SCCX, rhnConfigFile CF
                                                            WHERE  SCCX.server_id = SCC.server_id
                                                              AND  CF.config_channel_id = SCCX.config_channel_id
                                                              AND  CF.config_file_name_id = CFNX.id
                                                              AND  SCCX.config_channel_id = CC.id
                                                              AND  CC.confchan_type_id = CCT.id
                                                              AND  CCT.label = 'local_override' ) ,
                                                         ( SELECT  SCCX.config_channel_id
                                                             FROM  rhnServerConfigChannel SCCX, rhnConfigFile CF
                                                            WHERE  CF.config_file_name_id = CFNX.id
                                                              AND  CF.config_channel_id = SCCX.config_channel_id
                                                              AND  SCCX.server_id = SCC.server_id
                                                              AND  SCCX.position = ( SELECT  min(SCCX.position)
                                                                                      FROM  rhnServerConfigChannel SCCX, rhnConfigFile CF
                                                                                     WHERE  SCCX.server_id = SCC.server_id
                                                                                       AND  CF.config_channel_id = SCCX.config_channel_id
                                                                                       AND  CF.config_file_name_id = CFNX.id ) ) ) AS config_revision_id
                                              FROM  rhnConfigFileName CFNX
                                             WHERE  CFNX.id = CFN.id ) ) AS config_file_count
  FROM  rhnServerConfigChannel SCC
 WHERE  SCC.server_id IN (%s)
   AND  SCC.config_channel_id = :ccid
  </elaborator>
</mode>

<mode name="channels_in_set_for_system" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="sid, user_id, channel_set_label">
SELECT  CC.name, CC.id
  FROM  rhnConfigChannel CC,
            rhnSet ST,
        rhnServerConfigChannel SCC,
            rhnUserServerPerms USP
 WHERE  USP.server_id = :sid
   AND  USP.user_id = :user_id
   AND  ST.user_id = :user_id
   AND  ST.label = :channel_set_label
   AND  ST.element = CC.id
   AND  SCC.config_channel_id = CC.id
   AND  SCC.server_id = :sid
ORDER BY CC.name
  </query>
  <elaborator params="sid">
SELECT  SCC.config_channel_id AS id,
        ( SELECT  count(CFN.id)
            FROM  rhnConfigFileName CFN, rhnConfigFile CF
           WHERE  CF.config_file_name_id = CFN.id
             AND  CF.config_channel_id = SCC.config_channel_id
             AND  SCC.config_channel_id = ( SELECT  COALESCE( ( SELECT  CC.id
                                                             FROM  rhnConfigChannel CC, rhnConfigChannelType CCT,
                                                                   rhnServerConfigChannel SCCX, rhnConfigFile CF
                                                            WHERE  SCCX.server_id = SCC.server_id
                                                              AND  CF.config_channel_id = SCCX.config_channel_id
                                                              AND  CF.config_file_name_id = CFNX.id
                                                              AND  SCCX.config_channel_id = CC.id
                                                              AND  CC.confchan_type_id = CCT.id
                                                              AND  CCT.label = 'local_override' ) ,
                                                         ( SELECT  SCCX.config_channel_id
                                                             FROM  rhnServerConfigChannel SCCX, rhnConfigFile CF
                                                            WHERE  CF.config_file_name_id = CFNX.id
                                                              AND  CF.config_channel_id = SCCX.config_channel_id
                                                              AND  SCCX.server_id = SCC.server_id
                                                              AND  SCCX.position = ( SELECT  min(SCCX.position)
                                                                                      FROM  rhnServerConfigChannel SCCX, rhnConfigFile CF
                                                                                     WHERE  SCCX.server_id = SCC.server_id
                                                                                       AND  CF.config_channel_id = SCCX.config_channel_id
                                                                                       AND  CF.config_file_name_id = CFNX.id ) ) ) AS config_revision_id
                                              FROM  rhnConfigFileName CFNX
                                             WHERE  CFNX.id = CFN.id ) ) AS file_count
  FROM  rhnServerConfigChannel SCC
 WHERE  SCC.config_channel_id IN (%s)
   AND  SCC.server_id = :sid
  </elaborator>
</mode>

<!--
        Find all the config-files and their ids and channel-names and channel-ids
        where channel-id != ccid
-->
<mode name="config_files_not_in_channel" class="com.redhat.rhn.frontend.dto.ConfigFileDto">
  <query params="ccid, user_id, orgid">
SELECT CF.id,
           CC.ID as config_channel_id,
           CC.NAME as config_channel_name,
           CFN.PATH,
           CR.MODIFIED,
           CCT.label AS config_channel_type,
           CFT.label AS type
FROM  rhnconfigchannel CC,
          rhnconfigfile CF,
          rhnconfigchanneltype CCT,
          rhnconfigfilename CFN,
          rhnconfigrevision CR,
          rhnconfigfiletype CFT
WHERE CCT.id = CC.confchan_type_id
  AND CFT.id = CR.config_file_type_id
  AND CC.ORG_ID = :orgid
  AND CC.ID != :ccid
  AND CF.config_channel_id = CC.id
  AND CFN.id = CF.config_file_name_id
  AND CR.id = CF.latest_config_revision_id
  AND rhn_config_channel.get_user_file_access(CF.id, :user_id) = 1
  </query>
</mode>

        <!--
                List all systems (ID, NAME) in a specified channel, along with the number of
                Channel files that the system overrides (OVERRIDDEN_COUNT) and the number of channel
                files that the system has outranked (OUTRANKED_COUNT) of the last successful deploy
        -->
<mode name="systems_in_channel_info" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
        <query params="user_id,ccid">
                SELECT S.ID, S.NAME
                  FROM rhnServer S,
                       rhnServerConfigChannel SCC,
                   rhnUserServerPerms USP
                 WHERE rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
                   AND SCC.config_channel_id = :ccid
                   AND S.id = SCC.server_id
                   AND USP.server_id = S.id
                   AND USP.user_id = :user_id
                 ORDER BY S.NAME
        </query>
        <elaborator params="ccid">
        SELECT S.ID,
            COALESCE((
                                SELECT COUNT(DISTINCT CFN2.id)
                                FROM rhnConfigChannel CC2, rhnConfigChannelType CCT2, rhnServerConfigChannel SCC2,
                                         rhnConfigFile cf2, rhnConfigFileName cfn2,
                                         rhnConfigChannel CC,  rhnServerConfigChannel SCC,
                                         rhnConfigFile cf, rhnConfigFileName cfn
                                WHERE SCC2.server_id = S.ID
                                  AND scc.server_id = S.ID
                                  AND cc.id = :ccid
                                  AND cf.config_channel_id = cc.id
                                  AND cfn.id = cf.config_file_name_id
                                  AND CC2.id = SCC2.config_channel_id
                                  AND CC2.confchan_type_id = CCT2.id
                                  AND CCT2.label = 'local_override'
                                  AND CF2.config_channel_Id = CC2.id
                                  AND CFN2.id = CF2.config_file_name_id
                                  AND cfn.id = cfn2.id
                         ), 0) overridden_count,
                        COALESCE((
                                SELECT COUNT(DISTINCT CFN.id)
                                  FROM rhnConfigChannel CC,
                                           rhnConfigFile cf,
                                           rhnConfigFileName cfn,
                       rhnServerConfigChannel SCC,
                                           rhnConfigChannel CC2,
                       rhnServerConfigChannel SCC2,
                       rhnConfigFile cf2
                                 WHERE cfn.id = cf.config_file_name_id
                                   AND cf.config_channel_id = cc.id
                           AND cc.id = :ccid
                           AND scc.server_id = s.id
                           AND scc.config_channel_id = cc.id
                           AND scc2.server_id = s.id
                           AND scc2.config_channel_id != cc.id
                           AND scc2.position &lt; scc.position
                           AND cf2.config_file_name_id = cfn.id
                           AND cf2.config_channel_id = cc2.id
                           AND cc2.id = scc2.config_channel_id
                        ),0) outranked_count
                FROM rhnServer S
                WHERE S.ID IN (%s)
        </elaborator>
</mode>

        <!--
                List all systems (ID, NAME) in a specified channel, along with the number of
                Channel files that the system overrides (OVERRIDDEN_COUNT) and the number of channel
                files that the system has outranked (OUTRANKED_COUNT) of the last successful deploy,
                LIMITED BY the specified SET
        -->
<mode name="systems_in_channel_info_set" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
        <query params="user_id,ccid,set_label">
                SELECT S.ID, S.NAME
                  FROM rhnServer S,
                           rhnSet ST,
                       rhnServerConfigChannel SCC,
                   rhnUserServerPerms USP
                 WHERE rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
                   AND SCC.config_channel_id = :ccid
                   AND S.id = SCC.server_id
                   AND ST.user_id = :user_id
                   AND ST.label = :set_label
                   AND ST.element = S.id
                   AND USP.server_id = S.id
                   AND USP.user_id = :user_id
          ORDER BY S.NAME
        </query>
        <elaborator params="ccid">
                SELECT S.ID,
               COALESCE((
                                SELECT COUNT(DISTINCT CFN2.id)
                                  FROM rhnConfigChannel CC2, rhnConfigChannelType CCT2, rhnServerConfigChannel SCC2,
                                           rhnConfigFile cf2, rhnConfigFileName cfn2,
                                           rhnConfigChannel CC,  rhnServerConfigChannel SCC,
                                           rhnConfigFile cf, rhnConfigFileName cfn
                                 WHERE SCC2.server_id = S.ID
                                   AND scc.server_id = S.ID
                                   AND cc.id = :ccid
                                   AND cf.config_channel_id = cc.id
                                   AND cfn.id = cf.config_file_name_id
                                   AND CC2.id = SCC2.config_channel_id
                                   AND CC2.confchan_type_id = CCT2.id
                                   AND CCT2.label = 'local_override'
                                   AND CF2.config_channel_Id = CC2.id
                                   AND CFN2.id = CF2.config_file_name_id
                                   AND cfn.id = cfn2.id
                   ), 0) overridden_count,
                           COALESCE((
                                SELECT COUNT(DISTINCT CFN.id)
                                  FROM rhnConfigChannel CC,
                                           rhnConfigFile cf,
                                           rhnConfigFileName cfn,
                       rhnServerConfigChannel SCC,
                                           rhnConfigChannel CC2,
                       rhnServerConfigChannel SCC2,
                       rhnConfigFile cf2
                                 WHERE cfn.id = cf.config_file_name_id
                                   AND cf.config_channel_id = cc.id
                           AND cc.id = :ccid
                           AND scc.server_id = s.id
                           AND scc.config_channel_id = cc.id
                           AND scc2.server_id = s.id
                           AND scc2.config_channel_id != cc.id
                           AND scc2.position &lt; scc.position
                           AND cf2.config_file_name_id = cfn.id
                           AND cf2.config_channel_id = cc2.id
                           AND cc2.id = scc2.config_channel_id
                                ),0) outranked_count
                  FROM rhnServer S
                 WHERE S.ID IN (%s)
        </elaborator>
</mode>

        <!--
                List all systems (NAME, ID) from the specified channel.  For each system, list the
                most-recent succcessful deploy action of a file with the specified filename-id
                (REV_ID).  For each system, show how many
                global-overrides there are of the specified file-name (OUTRANKED_COUNT), and how
                many local overrides there are of the specified filename (OVERRIDEN_COUNT)
        -->
<mode name="global_file_deploy_info"
                class="com.redhat.rhn.frontend.dto.ConfigGlobalDeployDto">
        <query params="ccid, cfnid, user_id">
                SELECT S.ID, S.NAME,
             ( SELECT count( CF2.id )
                            FROM rhnConfigChannel CC2
                     inner join rhnConfigChannelType CCT2 on CC2.confchan_type_id = CCT2.id
                         inner join rhnServerConfigChannel SCC2 on CC2.id = SCC2.config_channel_id
                         inner join rhnConfigFile CF2 on CF2.config_channel_Id = CC2.id
                WHERE SCC2.server_id = S.id
                                  AND CCT2.label = 'local_override'
                              AND CF2.config_file_name_id = :cfnid) as OVERRIDE_COUNT,
              (SELECT count(CC2.id)
                FROM rhnConfigChannel CC2
                     inner join rhnConfigChannelType CCT2 on CC2.confchan_type_id = CCT2.id
                         inner join rhnServerConfigChannel SCC2 on CC2.id = SCC2.config_channel_id
                     inner join rhnConfigFile CF2 on CF2.config_channel_Id = CC2.id
                     inner join rhnServerConfigChannel SCC on SCC.server_id = SCC2.server_id
                         inner join rhnConfigChannel CC on CC.id = SCC.config_channel_id and CC.confchan_type_id = CCT2.id
                  inner join rhnConfigFile CF on CF.config_channel_Id = CC.id AND CF.config_file_name_id = CF2.config_file_name_id
            WHERE SCC2.server_id = S.ID
                                  AND SCC.position &lt; SCC2.position
                                          AND CC2.id =:ccid
                                          AND CCT2.label = 'normal'
                 AND CF2.config_file_name_id = :cfnid) as OUTRANKED_COUNT,
            COALESCE((select 1 from rhnClientCapability CCap
                                        inner join rhnClientCapabilityName CCN on  CCap.capability_name_id = CCN.id
                        where  CCN.name = 'configfiles.deploy'
                                AND  CCap.server_id = S.id
                                AND EXISTS (select 1 from rhnServerFeaturesView SFV
                                                where SFV.server_id = s.id      AND SFV.label = 'ftr_config')
                        ),0) as DEPLOYABLE
                  FROM rhnServer S
                       inner join rhnServerConfigChannel SCC on S.id = SCC.server_id
                           inner join rhnUserServerPerms USP on USP.server_id = S.id
                 WHERE rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
                   AND SCC.config_channel_id = :ccid
                   AND USP.user_id = :user_id
                 ORDER BY S.NAME
        </query>







        <!-- no elaborator. The counts are decided in the driving query because
             they are needed for select all.  bleah -->
</mode>

        <!--
                Like the above query, but limited by the systems that appear in the set
                identified by "system_set_label"
        -->
<mode name="global_file_deploy_set_info"
                class="com.redhat.rhn.frontend.dto.ConfigGlobalDeployDto">
        <query params="ccid,set_label,user_id">
                SELECT S.ID, S.NAME
                  FROM rhnServer S
                       inner join rhnServerConfigChannel SCC on S.id = SCC.server_id
                           inner join rhnSet ST on ST.element = S.id
                   inner join rhnClientCapability CCap on CCap.server_id = S.id
                   inner join rhnClientCapabilityName CCN on  CCap.capability_name_id = CCN.id
                   inner join rhnServerFeaturesView SFV on SFV.server_id = s.id
                 WHERE rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
                   AND ST.user_id = :user_id
                   AND ST.label = :set_label
                   AND SCC.config_channel_id = :ccid
           AND CCN.name = 'configfiles.deploy'
           AND SFV.label = 'ftr_config'
                 ORDER BY S.NAME
        </query>
        <elaborator params="cfnid,ccid">
        SELECT S.ID,
             ( SELECT count( CF2.id )
                    FROM rhnConfigChannel CC2
                     inner join rhnConfigChannelType CCT2 on CC2.confchan_type_id = CCT2.id
                         inner join rhnServerConfigChannel SCC2 on CC2.id = SCC2.config_channel_id
                     inner join rhnConfigFile CF2 on CF2.config_channel_Id = CC2.id
                WHERE SCC2.server_id = S.id
                                  AND CCT2.label = 'local_override'
                      AND CF2.config_file_name_id = :cfnid) as OVERRIDE_COUNT,

              (SELECT count(CC2.id)
                FROM rhnConfigChannel CC2
                     inner join rhnConfigChannelType CCT2 on CC2.confchan_type_id = CCT2.id
                         inner join rhnServerConfigChannel SCC2 on CC2.id = SCC2.config_channel_id
                     inner join rhnConfigFile CF2 on CF2.config_channel_Id = CC2.id
                     inner join rhnServerConfigChannel SCC on SCC.server_id = SCC2.server_id
                     inner join rhnConfigChannel CC on CC.id = SCC.config_channel_id and CC.confchan_type_id = CCT2.id
                        WHERE SCC2.server_id = S.ID
                          AND SCC.position &lt; SCC2.position
                                  AND CC2.id =:ccid
                                  AND CCT2.label = 'normal'
                                  AND CF2.config_file_name_id = :cfnid) as OUTRANKED_COUNT
        FROM rhnServer S
        WHERE S.ID IN (%s)
        </elaborator>
</mode>


        <!--
                List all cfg-managed systems that the user has access to, that are -not-
                already subscribed to the channel
        -->
<mode name="managed_systems_not_in_channel" class="com.redhat.rhn.frontend.dto.ConfigSystemDto">
        <query params="ccid,user_id">
SELECT * FROM (
SELECT  DISTINCT S.id,
                 S.name
    FROM  rhnServer S
            inner join rhnUserServerPerms USP on S.id = USP.server_id
            inner join rhnClientCapability CCap on CCap.server_id = S.id
            inner join rhnClientCapabilityName CCN on  CCap.capability_name_id = CCN.id
            inner join rhnServerFeaturesView SFV on SFV.server_id = s.id
   WHERE  rhn_config_channel.get_user_chan_access(:ccid, :user_id) = 1
         AND  USP.user_id = :user_id
     AND  CCN.name LIKE 'configfiles%'
     AND SFV.label = 'ftr_config'
     AND  NOT EXISTS(
                  SELECT 1
                    FROM rhnServerConfigChannel SCC
                   WHERE SCC.server_id = S.id
                     AND SCC.config_channel_id =:ccid
                  )
) X
ORDER BY UPPER(COALESCE(X.name, '(none)'))
        </query>
</mode>

<!-- list all the global config channels for a system.  Used in sdc. -->
<mode name="config_channels_for_system" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="sid, user_id">
SELECT  CC.id, CC.name, SCC.position
  FROM  rhnConfigChannel CC, rhnServerConfigChannel SCC,
        rhnConfigChannelType CCT, rhnUserServerPerms USP
 WHERE  SCC.server_id = :sid
   AND  USP.server_id = SCC.server_id
   AND  USP.user_id = :user_id
   AND  SCC.config_channel_id = CC.id
   AND  CC.confchan_type_id = CCT.id
   AND  CCT.label = 'normal'
ORDER BY SCC.position ASC
  </query>
  <elaborator params="sid">
SELECT  CC.id, CC.label,
       COALESCE( (
             SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'file'
            ), 0) AS files_only_count,
       COALESCE( (
             SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'symlink'
            ), 0) AS symlinks_only_count,
       COALESCE( (
             SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'directory'
            ), 0) AS dirs_only_count,
        ( SELECT count(CF.id)
            FROM rhnConfigFile CF, rhnConfigFileName CFN
           WHERE CF.config_channel_id = CC.id
             AND CF.config_file_name_id = CFN.id
             AND CC.id = ( SELECT  COALESCE( ( SELECT  CC.id
                                            FROM  rhnConfigChannel CC, rhnConfigChannelType CCT,
                                                  rhnServerConfigChannel SCCX, rhnConfigFile CF
                                           WHERE  SCCX.server_id = :sid
                                             AND  CF.config_channel_id = SCCX.config_channel_id
                                             AND  CF.config_file_name_id = CFNX.id
                                             AND  SCCX.config_channel_id = CC.id
                                             AND  CC.confchan_type_id = CCT.id
                                             AND  CCT.label = 'local_override' ) ,
                                        ( SELECT  SCCX.config_channel_id
                                                   FROM  rhnServerConfigChannel SCCX, rhnConfigFile CF
                                           WHERE  CF.config_file_name_id = CFNX.id
                                             AND  CF.config_channel_id = SCCX.config_channel_id
                                             AND  SCCX.server_id = :sid
                                             AND  SCCX.position = ( SELECT  min(SCCX.position)
                                                                      FROM  rhnServerConfigChannel SCCX, rhnConfigFile CF
                                                                     WHERE  SCCX.server_id = :sid
                                                                       AND  CF.config_channel_id = SCCX.config_channel_id
                                                                       AND  CF.config_file_name_id = CFNX.id ) ) ) AS config_channel_id
                             FROM  rhnConfigFileName CFNX
                            WHERE  CFNX.id = CFN.id ) ) AS deployable_file_count
  FROM  rhnConfigChannel CC
 WHERE  CC.id IN (%s)
  </elaborator>
</mode>

<mode name="overview_config_channels_for_act_key" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="org_id, user_id, tid">
SELECT CC.id, CC.name, CC.label, CCT.label as type,
                rhn_config_channel.get_user_chan_access(CC.id, :user_id) as can_access,
                tcc.position as position
  FROM rhnConfigChannelType CCT
          INNER JOIN rhnConfigChannel CC ON CC.confchan_type_id = CCT.id
          INNER JOIN rhnRegTokenConfigChannels tcc On CC.id = tcc.CONFIG_CHANNEL_ID
 WHERE CC.org_id = :org_id
   AND CCT.label IN ('normal')
   AND tcc.token_id = :tid
ORDER BY tcc.position
  </query>
  <elaborator name="elaborator_config_channel_file_dir_count"/>
</mode>


<mode name="overview_config_channels_for_act_key_subscriptions"
                                class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="org_id, user_id, tid">
SELECT CC.id, CC.name, CC.label, CCT.label as type,
                rhn_config_channel.get_user_chan_access(CC.id, :user_id) as can_access
  FROM rhnConfigChannelType CCT
          INNER JOIN rhnConfigChannel CC ON CC.confchan_type_id = CCT.id
 WHERE CC.org_id = :org_id
   AND CCT.label IN ('normal')
   AND NOT EXISTS (select 1 from rhnRegTokenConfigChannels tcc where
                                        CC.id = tcc.CONFIG_CHANNEL_ID AND tcc.token_id = :tid)
 order by cc.name
  </query>
  <elaborator name="elaborator_config_channel_file_dir_count"/>
</mode>

<mode name="overview_config_channels" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="org_id, user_id">
SELECT CC.id, CC.name, CC.label, CCT.label as type
  FROM rhnConfigChannelType CCT
          INNER JOIN rhnConfigChannel CC ON CC.confchan_type_id = CCT.id
 WHERE CC.org_id = :org_id
   AND CCT.label IN ('normal')
   AND rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
ORDER BY UPPER(CC.name)
  </query>
  <elaborator name = "elaborator_config_channel_details"/>
  <elaborator name="elaborator_config_channel_system_count" params="user_id"/>
  <elaborator name="elaborator_config_channel_file_dir_count"/>
</mode>


<query name="elaborator_config_channel_details">
SELECT CC.id,
       CC.org_id,
       CC.name,
       CC.label,
       CC.description,
       CC.created,
       CC.modified
  FROM rhnConfigChannel CC
 WHERE CC.id in (%s)
</query>

<query name="elaborator_config_channel_system_count" params="user_id">
SELECT CC.id AS ID,
       (SELECT count(SCC.server_id)
          FROM rhnServerConfigChannel SCC,
               rhnUserServerPerms USP
         WHERE USP.user_id = :user_id
           AND USP.server_id = SCC.server_id
           AND SCC.config_channel_id = CC.id) AS system_count
  FROM rhnConfigChannel CC
 WHERE CC.id IN (%s)
</query>

<query name="elaborator_config_channel_file_dir_count">
SELECT CC.id AS ID,
             (SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'file')
              AS files_only_count,
            (SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'symlink')
            AS symlinks_only_count,
            (SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'directory')
            AS dirs_only_count
  FROM rhnConfigChannel CC
 WHERE CC.id IN (%s)
</query>

<mode name="config_channels_for_system_subscriptions"
        class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="org_id, user_id, sid">
SELECT CC.id,
       CC.name,
       CC.label
  FROM rhnConfigChannelType CCT
        INNER JOIN rhnConfigChannel CC ON CC.confchan_type_id = CCT.id
   WHERE CC.org_id = :org_id
   AND CCT.label IN ('normal')
   AND NOT EXISTS (select 1 from rhnServerConfigChannel SCC where SCC.server_id =:sid and SCC.config_channel_id = CC.id)
   AND rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
ORDER BY UPPER(CC.name)
  </query>
  <elaborator name="elaborator_config_channel_system_count" params="user_id"/>
  <elaborator name="elaborator_config_channel_file_dir_count"/>
</mode>

<query name="ssm_channel_elab" params="system_set_label, user_id">
SELECT  CC.id,
        COALESCE( (
             SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'file'
            ), 0) AS files_only_count,
        COALESCE( (
             SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'directory'
            ), 0) AS dirs_only_count,
        COALESCE( (
             SELECT COUNT(SCC.server_id)
               FROM rhnServerConfigChannel SCC,
                    rhnSet ST, rhnUserServerPerms USP
              WHERE ST.user_id = :user_id
                AND ST.label = :system_set_label
                AND ST.element = SCC.server_id
                AND SCC.config_channel_id = CC.id
                AND USP.server_id = ST.element
                AND USP.user_id = :user_id
            ), 0) AS system_count
  FROM  rhnConfigChannel CC
 WHERE  CC.id IN (%s)
</query>

<!-- Returns the list of configuration channels to display as options for SSM server to
     subscribe to. This query will *not* display channels that every server in the SSM
     is already subscribed to since it would be redundant.
-->
<mode name="ssm_channels_for_subscribe_choose" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="org_id, user_id">
SELECT  CC.id, CC.name
  FROM  rhnConfigChannel CC
  JOIN  rhnConfigChannelType CCT
    ON  CC.confchan_type_id = CCT.id
  LEFT  JOIN (SELECT count(RS.element) server_cnt,
                     SCC.config_channel_id
                FROM rhnSet RS
                LEFT JOIN rhnServerConfigChannel SCC
                  ON RS.element = SCC.server_id
               WHERE RS.label = 'system_list'
                 AND RS.user_id = :user_id
               GROUP BY SCC.config_channel_id
              ) SSMCHannels
    ON  CC.id = SSMCHannels.config_channel_id
 WHERE  CC.org_id = :org_id
   AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
   AND  CCT.label = 'normal'
   AND  COALESCE(SSMCHannels.server_cnt, 0) &lt; (SELECT count(*)
                                                    FROM rhnSet
                                                   WHERE label = 'system_list'
                                                     AND user_id = :user_id)
ORDER BY UPPER(CC.name)
  </query>
  <elaborator name="ssm_channel_elab" />
</mode>

<!-- Returns the list of configuration channels that at least one server currently in the SSM
     is subscribed to. The idea here is that these will need to be taken into account
     when ranking newly subscribed channels, so these must be added to the user selection
     (they are not already in the user selection because they were omitted as effectively
     a no-op since the subscriptions exist.

     For an explanation of how this query runs, see ssm_channels_for_subscribe_choose.
     This query is basically just the negation.
-->
<mode name="ssm_channels_for_subscribe_already_sub" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="org_id, user_id">
SELECT  CC.id, CC.name
  FROM  rhnConfigChannel CC
  JOIN  rhnConfigChannelType CCT
    ON  CC.confchan_type_id = CCT.id
  LEFT  JOIN (SELECT DISTINCT SCC.config_channel_id
                FROM rhnSet RS
                LEFT JOIN rhnServerConfigChannel SCC
                  ON RS.element = SCC.server_id
               WHERE RS.label = 'system_list'
                 AND RS.user_id = :user_id
             ) SSMCHannels
    ON  CC.id = SSMCHannels.config_channel_id
 WHERE  CC.org_id = :org_id
   AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
   AND  CCT.label = 'normal'
   AND  SSMCHannels.config_channel_id is not NULL
ORDER BY UPPER(CC.name)
  </query>
  <elaborator name="ssm_channel_elab" />
</mode>

<mode name="ssm_channels_for_subscribe_in_set" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query params="user_id, channel_set_label">
SELECT  CC.id, CC.name
  FROM  rhnConfigChannel CC, rhnConfigChannelType CCT, rhnSet ST
 WHERE  ST.user_id = :user_id
   AND  ST.label = :channel_set_label
   AND  ST.element = CC.id
   AND  CC.confchan_type_id = CCT.id
   AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
   AND  CCT.label = 'normal'
ORDER BY ST.element_two
  </query>
  <elaborator name="ssm_channel_elab" />
</mode>

<query name="ssm_channel_elab" params="system_set_label, user_id">
SELECT  CC.id,
        COALESCE( (
             SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'file'
            ), 0) AS files_only_count,
        COALESCE( (
             SELECT COUNT(CF.id)
               FROM rhnConfigFile CF
               INNER JOIN rhnConfigRevision CR ON CR.id = CF.latest_config_revision_id
               INNER JOIN rhnConfigFileType CFT ON CFT.ID = CR.CONFIG_FILE_TYPE_ID
              WHERE CF.config_channel_id = CC.id
                AND CF.latest_config_revision_id IS NOT NULL
                AND CFT.LABEL = 'directory'
            ), 0) AS dirs_only_count,
        COALESCE( (
             SELECT COUNT(SCC.server_id)
               FROM rhnServerConfigChannel SCC,
                    rhnSet ST, rhnUserServerPerms USP
              WHERE ST.user_id = :user_id
                AND ST.label = :system_set_label
                AND ST.element = SCC.server_id
                AND SCC.config_channel_id = CC.id
                AND USP.server_id = ST.element
                AND USP.user_id = :user_id
            ), 0) AS system_count
  FROM  rhnConfigChannel CC
 WHERE  CC.id IN (%s)
</query>

<!-- Find all config-channels of a given type (normal, local, sandbox OTHER THAN a specified one -->
<query name ="find_other_channels" params="org_id, ccid, type, user_id" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  SELECT  DISTINCT CC.id, CC.label, CC.name, CCT.label AS type
    FROM  rhnConfigChannel CC, rhnConfigChannelType CCT
   WHERE  CC.org_id = :org_id
     AND  CC.confchan_type_id = CCT.id
     AND  CCT.label = :type
     AND  CC.id != :ccid
         AND  rhn_config_channel.get_user_chan_access(CC.id, :user_id) = 1
ORDER BY  name
</query>

<!-- Return just channel info -->
<mode name="other_channels" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
        <query name="find_other_channels"></query>
  <elaborator name="elaborator_config_channel_system_count" params="user_id"/>
  <elaborator name="elaborator_config_channel_file_dir_count"/>
</mode>

<!-- Return channel-info and file info as well -->
<mode name="channels_for_file_copy" class="com.redhat.rhn.frontend.dto.ConfigChannelDto">
  <query name="find_other_channels"/>
  <elaborator params="name">
SELECT  CC.id, CR.revision AS config_revision,
        CR.id AS config_revision_id,
        CF.id AS config_file_id
  FROM  rhnConfigChannel CC, rhnConfigRevision CR,
        rhnConfigFile CF, rhnConfigFileName CFN
 WHERE  CC.id IN (%s)
   AND  CC.id = CF.config_channel_id
   AND  CF.config_file_name_id = CFN.id
   AND  CFN.path = :name
   AND  CF.id = CR.config_file_id
   AND  CR.revision = (SELECT  MAX(CR.revision)
                         FROM  rhnConfigRevision CR
                        WHERE  CF.id = CR.config_file_id)
  </elaborator>
</mode>

<mode name="upload_action_status">
  <query params="aid">
SELECT CFN.path,
       CFF.name AS FAILURE_REASON
  FROM rhnConfigFileName CFN,
       rhnActionConfigFileName ACFN LEFT OUTER JOIN rhnConfigFileFailure CFF
       ON ACFN.failure_id = CFF.id
 WHERE ACFN.action_id = :aid
   AND ACFN.config_file_name_id = CFN.id
ORDER BY CFN.path
  </query>
</mode>

<mode name="config_action_revisions">
  <query params="aid">
SELECT CFN.path,
       CR.id,
       CR.revision,
       ACR.id AS ACTION_REVISION_ID,
       CFF.name AS FAILURE_REASON
  FROM rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnConfigRevision CR,
       rhnActionConfigRevision ACR LEFT OUTER JOIN rhnConfigFileFailure CFF
       ON ACR.failure_id = CFF.id
 WHERE ACR.action_id = :aid
   AND ACR.config_revision_id = CR.id
   AND CR.config_file_id = CF.id
   AND CF.config_file_name_id = CFN.id
ORDER BY UPPER(CFN.path)
  </query>
</mode>

<mode name="diff_action_revisions">
  <query params="aid">
SELECT CFN.path,
       CR.id,
       CR.id AS REVISION_ID,
       CR.revision,
       ACR.id AS ACTION_REVISION_ID,
       CFF.name AS FAILURE_REASON,
       ACRR.result AS DIFF,
       rhn_config_channel.action_diff_revision_status(ACR.id) AS STATUS
  FROM rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnConfigRevision CR,
       rhnActionConfigRevision ACR LEFT OUTER JOIN rhnConfigFileFailure CFF
       ON ACR.failure_id = CFF.id,
       rhnActionConfigRevisionResult ACRR
 WHERE ACR.action_id = :aid
   AND ACR.config_revision_id = CR.id
   AND CR.config_file_id = CF.id
   AND CF.config_file_name_id = CFN.id
   AND ACRR.action_config_revision_id = ACR.id
ORDER BY UPPER(CFN.path)
  </query>
</mode>

<mode name="snapshot_configchannel_diff">
  <query params="ss_id, sid">
select case when serverconfigchannel.id is not null then serverconfigchannel.id else snapshotconfigchannel.id end as id,
  case when serverconfigchannel.id is not null then serverconfigchannel.name else snapshotconfigchannel.name end as name,
  case when serverconfigchannel.id is not null then serverconfigchannel.label else snapshotconfigchannel.label end as label,
  case when serverconfigchannel.id is not null then 1 else -1 end as comparison
  from (
        select cc1.id, cc1.name, cc1.label
          from rhnSnapshotConfigChannel scc1
          join rhnConfigChannel cc1
            on cc1.id = scc1.config_channel_id
          join rhnConfigChannelType cct1
            on cct1.id = cc1.confchan_type_id
         where scc1.snapshot_id = :ss_id
           and cct1.priority is not null
           and cct1.label = 'normal'
       ) snapshotconfigchannel
  full outer join (
        select cc2.id, cc2.name, cc2.label
          from rhnServerConfigChannel scc2
          join rhnConfigChannel cc2
            on cc2.id = scc2.config_channel_id
          join rhnConfigChannelType cct2
            on cct2.id = cc2.confchan_type_id
         where scc2.server_id = :sid
           and cct2.priority is not null
           and cct2.label = 'normal'
       ) serverconfigchannel
    on snapshotconfigchannel.id = serverconfigchannel.id
 where serverconfigchannel.id is null
    or snapshotconfigchannel.id is null
  </query>
</mode>

<mode name="configfiles_for_snapshot">
  <query params="ss_id">
SELECT DISTINCT
       CR.id,
       UPPER(Csum.checksum_type) || ': ' || Csum.checksum AS CHECKSUM,
       CFN.id AS CONFIG_FILE_NAME_ID,
       CFN.path,
       CR.revision,
       CR.id AS REVISION_ID,
       CCon.delim_start,
       CCon.delim_end,
       CF.config_channel_id,
       TO_CHAR(coalesce(CCon.created, CF.created), 'YYYY-MM-DD HH24:MI:SS') AS CREATED
  FROM
       rhnConfigFileName CFN,
       rhnConfigFile CF,
       rhnSnapshotConfigRevision SCR,
       rhnConfigRevision CR
  LEFT JOIN rhnConfigContent CCon
    ON CR.config_content_id = CCon.id
  LEFT JOIN rhnChecksumView Csum
    ON CCon.checksum_id = Csum.id
 WHERE SCR.snapshot_id = :ss_id
   AND SCR.config_revision_id = CR.id
   AND CR.config_file_id = CF.id
   AND CF.config_file_name_id = CFN.id
ORDER BY CFN.path
  </query>
</mode>

<callable-mode name="create_new_config_channel">
  <query params="org_id_in, type_in, name_in, label_in,  description_in">
      {:channelId = call rhn_config.insert_channel( :org_id_in, :type_in, :name_in, :label_in, :description_in)}
  </query>
</callable-mode>

<callable-mode name="create_new_config_file">
  <query params="config_channel_id_in, name_in">
      {:configFileId = call rhn_config.insert_file( :config_channel_id_in, :name_in)}
  </query>
</callable-mode>

<callable-mode name="create_new_config_revision">
  <query params="revision_in, config_file_id_in, config_content_id_in, config_info_id_in, config_file_type_id">
      {:configRevisionId = call rhn_config.insert_revision( :revision_in, :config_file_id_in, :config_content_id_in, :config_info_id_in, :config_file_type_id)}
  </query>
</callable-mode>

<callable-mode name="lookup_config_filename">
  <query params="name_in">
      {:name_id = call lookup_config_filename( :name_in )}
  </query>
</callable-mode>

<callable-mode name="remove_config_channel">
  <query params="config_channel_id_in">
      {call rhn_config.delete_channel( :config_channel_id_in )}
  </query>
</callable-mode>

<callable-mode name="remove_config_file">
  <query params="config_file_id_in">
      {call rhn_config.delete_file( :config_file_id_in )}
  </query>
</callable-mode>

<callable-mode name="remove_config_revision">
  <query params="config_revision_id_in, org_id">
      {call rhn_config.delete_revision( :config_revision_id_in, :org_id )}
  </query>
</callable-mode>

</datasource_modes>

