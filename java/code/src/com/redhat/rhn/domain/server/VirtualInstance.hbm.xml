<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"classpath://org/hibernate/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
        <import class="com.redhat.rhn.domain.server.GuestAndNonVirtHostView"/>

    <class name="com.redhat.rhn.domain.server.VirtualInstance" table="RhnVirtualInstance">
        <id name="id" type="long" column="id">
            <meta attribute="scope-set">protected</meta>
            <generator class="sequence">
                <param name="sequence">rhn_vi_id_seq</param>
            </generator>
        </id>

        <property name="uuid" column="UUID" type="string" length="128"/>
        <property name="confirmed" column="CONFIRMED" type="long"/>
        <property name="created" column="CREATED" type="timestamp" insert="false" update="false"/>
        <property name="modified" column="MODIFIED" type="timestamp" insert="false" update="false"/>

        <many-to-one name="guestSystem"
                     column="virtual_system_id "
                     class="com.redhat.rhn.domain.server.Server"
                     cascade="save-update"/>

        <many-to-one name="hostSystem"
                     column="host_system_id"
                     class="com.redhat.rhn.domain.server.Server"
                     cascade="save-update"/>

        <one-to-one name="instanceInfo"
                    class="com.redhat.rhn.domain.server.VirtualInstanceInfo"
                    cascade="all"/>
    </class>

    <query name="VirtualInstance.lookupGuestBySid">
        <![CDATA[
          from VirtualInstance guest
          where guest.guestSystem.id = :sid and guest.guestSystem.org = :org
        ]]>
    </query>

    <query name="VirtualInstance.isOutdatedVirtualInstance">
        <![CDATA[
        from VirtualInstance guest where guest = :guest
            and guest.modified < (select max(guest2.modified) from VirtualInstance guest2
                where guest2.uuid = guest.uuid)
        ]]>
    </query>

    <sql-query name="VirtualInstance.findGuestsWithNonVirtHostByOrg">
        <![CDATA[
          select
                guest.id as guest_id,
                guest.org_id as guest_org_id,
                guest.name as guest_name,
                host.org_id as host_org_id,
                host.id as host_id,
                host.name as host_name
          from
            RhnVirtualInstance vi
                inner join rhnServer guest on vi.virtual_system_id = guest.id
                inner join rhnServer host on vi.host_system_id = host.id
          where
            guest.org_id = :org_id and
            (host.org_id != :org_id  or
            not exists (
              select 1 from rhnServerGroupMembers sgm
                        inner join rhnServerGroup sg on sgm.server_group_id = sg.id
                        inner join rhnServerGroupType sgt on sg.group_type = sgt.id
               where
                    sgt.label = 'virtualization_host'
                    and sgm.server_id = host.id
            ))
        ]]>
    </sql-query>

    <query name="VirtualInstance.findGuestsWithoutAHostByOrg">
        <![CDATA[
          select
            new GuestAndNonVirtHostView(guest.id, guest.org.id, guest.name)
          from
            VirtualInstance virtualInstance join virtualInstance.guestSystem guest
          where
            virtualInstance.hostSystem is null and
            guest.org = :org
        ]]>
    </query>
</hibernate-mapping>
