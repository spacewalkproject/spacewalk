<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"classpath://org/hibernate/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.redhat.rhn.domain.kickstart.KickstartData" table="RHNKSDATA" discriminator-value="wizard">

        <id name="id" type="long" column="id">
            <meta attribute="scope-set">protected</meta>
            <generator class="sequence">
                <param name="sequence">RHN_KS_ID_SEQ</param>
            </generator>
        </id>
        <discriminator column = "ks_type"
                type="string"/>

        <many-to-one name="org"
                     column="org_id"
                     class="com.redhat.rhn.domain.org.Org"
                     outer-join="true"
                     not-null="true" />
        <property name="label" column="label" not-null="true" type="string" length="64" />
        <property name="kickstartType" column="ks_type" type="string" length="8"
                    insert="false" update="false" />
        <property name="comments" column="comments"  type="string" length="4000" />
        <property name="active" column="active" not-null="true" type="yes_no" />
            <property name="postLog" column="postLog" not-null="false" type="yes_no" />
            <property name="preLog" column="preLog" not-null="false" type="yes_no" />
        <property name="ksCfg" column="kscfg" not-null="false" type="yes_no" />
        <property name="created" column="created" not-null="true" type="timestamp" insert="false" update="false"/>
        <property name="modified" column="modified" not-null="true" type="timestamp" insert="false" update="false"/>
        <property name="isOrgDefault" column="is_org_default" not-null="true" type="yes_no" />
        <property name="kernelParams" column="kernel_params"  type="string" length="128" />
        <property name="nonChrootPost" column="nonchrootpost" not-null="false" type="yes_no" />
        <property name="noBase" column="no_base" not-null="false" type="yes_no" />
        <property name="ignoreMissing" column="ignore_missing" not-null="false" type="yes_no" />
        <property name="verboseUp2date" column="verboseup2date" not-null="false" type="yes_no" />
                <property name="partitionDataBinary" column="partition_data"  type="binary" />
        <property name="cobblerId" column="cobbler_id"  type="string" length="64" />
        <property name="updateType" column="update_type" length="7" type="string" not-null="true" />
        <set name="ksPackages" lazy="true" sort="natural" inverse="true" cascade="all-delete-orphan" >
          <key column="kickstart_id"/>
          <one-to-many class="com.redhat.rhn.domain.kickstart.KickstartPackage" />
        </set>

        <set name="cryptoKeys" table="rhnCryptoKeyKickstart" lazy="true">
            <key column="ksdata_id"/>
            <many-to-many column="crypto_key_id" class="com.redhat.rhn.domain.kickstart.crypto.CryptoKey" />
        </set>

        <set name="defaultRegTokens" table="rhnKickstartDefaultRegtoken" lazy="true">
            <key column="kickstart_id"/>
            <many-to-many column="regtoken_id" class="com.redhat.rhn.domain.token.Token" />
        </set>

        <set name="preserveFileLists" table="rhnKickstartPreserveFileList" lazy="true">
            <key column="kickstart_id"/>
            <many-to-many column="file_list_id" class="com.redhat.rhn.domain.common.FileList" />
        </set>

        <set name="ips" outer-join="false" cascade="all-delete-orphan"
            inverse="true" >
            <key column="kickstart_id"/>
            <one-to-many class="com.redhat.rhn.domain.kickstart.KickstartIpRange" />
        </set>

        <bag  name="commands" inverse="true" table="rhnKickstartCommand"
             cascade="all-delete-orphan" outer-join="false" >
            <key column="kickstart_id"/>
            <one-to-many class="com.redhat.rhn.domain.kickstart.KickstartCommand" />
            <loader query-ref="commandSort"/>
        </bag>

        <set name="scripts" outer-join="false" cascade="all-delete-orphan"
            inverse="true" >
            <key column="kickstart_id"/>
            <one-to-many class="com.redhat.rhn.domain.kickstart.KickstartScript" />
        </set>

        <set name="childChannels" table="rhnKickstartChildChannel">
            <key column="ksdata_id"/>
            <many-to-many column="channel_id"
                class="com.redhat.rhn.domain.channel.Channel" />
        </set>

        <one-to-one name="kickstartDefaults"
            class="com.redhat.rhn.domain.kickstart.KickstartDefaults"
            cascade="save-update"/>

        <subclass name="com.redhat.rhn.domain.kickstart.KickstartRawData"
            discriminator-value="raw">
        </subclass>
    </class>


    <query name="KickstartData.findByCobblerIdAndOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartData as t where t.cobblerId = :id and t.org = :org_id]]>
    </query>
    <query name="KickstartData.lookupByUpdateable">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartData as t where not t.updateType = 'none']]>
    </query>
    <query name="KickstartData.findByIdAndOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartData as t where t.id = :id and t.org = :org_id]]>
    </query>
    <query name="KickstartData.findByCILabelAndOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartData as t where LOWER(t.label) = LOWER(:label) and t.org = :org_id]]>
    </query>
    <query name="KickstartData.findByLabelAndOrg">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartData as t where t.label = :label and t.org = :org_id]]>
    </query>
    <query name="KickstartData.findByLabel">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartData as t where t.label = :label]]>
    </query>
    <query name="KickstartData.findOrgDefault">
        <![CDATA[from com.redhat.rhn.domain.kickstart.KickstartData as t where t.isOrgDefault = :isOrgDefault
                   and t.org = :org]]>
    </query>
    <query name="KickstartData.cobblerIds">
        <![CDATA[select t.cobblerId from com.redhat.rhn.domain.kickstart.KickstartData as t]]>
    </query>
    <query name="KickstartData.findByCKeyDescription">
        <![CDATA[
        select kd from com.redhat.rhn.domain.kickstart.KickstartData kd,
        com.redhat.rhn.domain.kickstart.crypto.CryptoKey ck
        where ck.description = :ck_description
        and ck in elements(kd.cryptoKeys)]]>
    </query>

    <sql-query name="commandSort">
            <load-collection alias="sortcol" role="com.redhat.rhn.domain.kickstart.KickstartData.commands"/>
                SELECT {sortcol.*}
                FROM rhnKickstartCommand sortcol, rhnKickstartCommandName cname
                WHERE KICKSTART_ID = :id
                AND sortcol.ks_command_name_id = cname.id
                ORDER BY cname.sort_order, custom_position
    </sql-query>

    <!--
        select {k.*}
        FROM rhnksdata k,
             rhnKickstartDefaults ksd
            WHERE k.id = ksd.kickstart_id
        AND ksd.kstree_id = 121
-->
    <sql-query name="KickstartData.lookupByTreeId">
        <![CDATA[SELECT {k.*}
                    FROM rhnKickstartDefaults ksd,
                         rhnksdata k
                    WHERE k.id = ksd.kickstart_id
                    AND ksd.kstree_id = :kstree_id]]>
                <return alias="k" class="com.redhat.rhn.domain.kickstart.KickstartData" />
    </sql-query>


</hibernate-mapping>
