policy_module(oracle-xe,@@VERSION@@)

require {
	type oracle_db_t;
	type oracle_sqlplus_log_t;
	type devpts_t;
	type inaddr_any_node_t;
	type oracle_tnslsnr_t;
	type oracle_sqlplus_t;
	type oracle_db_log_t;
	type http_cache_port_t;
	type initrc_t;
	type urandom_device_t;
	type oracle_lsnrctl_t;
	type lib_t;
	type bin_t;
	type rhnsd_conf_t;
	type ld_so_cache_t;
	type zero_device_t;
	type snmp_port_t;
}

rw_files_pattern(oracle_db_t, oracle_sqlplus_log_t, oracle_sqlplus_log_t)

dontaudit oracle_db_t devpts_t:chr_file { ioctl };

allow oracle_db_t self:process signull;

domain_read_all_domains_state(oracle_db_t);

allow oracle_db_t inaddr_any_node_t:tcp_socket node_bind;

allow oracle_tnslsnr_t oracle_db_t:unix_stream_socket connectto;

allow oracle_sqlplus_t oracle_db_log_t:dir search;

dontaudit oracle_tnslsnr_t http_cache_port_t:tcp_socket name_bind;

allow oracle_db_t initrc_t:fifo_file { read ioctl };

allow oracle_db_t self:process ptrace;

term_dontaudit_use_console(oracle_db_t)
term_dontaudit_use_console(oracle_tnslsnr_t)

mcs_ptrace_all(oracle_db_t)

allow oracle_sqlplus_t urandom_device_t:chr_file read;

# for oracle-xe-11.2.0-1.0.x86_64
allow oracle_lsnrctl_t self:netlink_route_socket { bind create getattr nlmsg_read };

corenet_udp_bind_generic_node(oracle_lsnrctl_t)

allow oracle_tnslsnr_t oracle_db_log_t:dir { search getattr setattr };
allow oracle_tnslsnr_t oracle_db_log_t:file getattr;

corecmd_exec_ls(oracle_db_t)
corecmd_exec_shell(oracle_db_t)
corecmd_read_bin_symlinks(oracle_db_t)

fs_manage_tmpfs_dirs(oracle_db_t)
fs_manage_tmpfs_files(oracle_db_t)

allow oracle_db_t self:process { execstack execmem };

dev_read_sysfs(oracle_db_t)
dev_list_sysfs(oracle_db_t)

allow oracle_lsnrctl_t oracle_db_log_t:dir getattr;
allow oracle_lsnrctl_t oracle_db_log_t:dir search;

allow oracle_sqlplus_t oracle_db_log_t:dir getattr;
allow oracle_sqlplus_t rhnsd_conf_t:dir search;

dontaudit oracle_sqlplus_t lib_t:dir write;

allow oracle_db_t bin_t:file { read execute execute_no_trans };

optional_policy(`
        gen_require(`
                type compat_ipv4_node_t;
        ')
	allow oracle_lsnrctl_t compat_ipv4_node_t:udp_socket node_bind;
')

#============= oracle_db_t ==============
allow oracle_db_t ld_so_cache_t:file execute;
allow oracle_db_t oracle_db_log_t:file execute;
allow oracle_db_t tmpfs_t:file execute;
allow oracle_db_t zero_device_t:chr_file execute;

#============= oracle_lsnrctl_t ==============
allow oracle_lsnrctl_t oracle_tnslsnr_t:process { siginh rlimitinh noatsecure };

#============= oracle_sqlplus_t ==============
allow oracle_sqlplus_t oracle_db_t:process { siginh rlimitinh noatsecure };

#============= oracle_tnslsnr_t ==============
allow oracle_tnslsnr_t http_cache_port_t:tcp_socket name_bind;

#!!!! This avc can be allowed using one of the these booleans:
#     nis_enabled, oracle_snmp_support
allow oracle_tnslsnr_t snmp_port_t:tcp_socket name_connect;
