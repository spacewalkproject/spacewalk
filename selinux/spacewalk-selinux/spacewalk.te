policy_module(spacewalk,@@VERSION@@)

## <desc>
## <p>
## Allow Spacewalk to work with data (/var/satellite) stored
## on NFS-mounted directories.
## </p>
## </desc>
gen_tunable(spacewalk_nfs_mountpoint,false)

require {
	type httpd_t;
	type restorecon_t;
	type httpd_sys_script_t;
	type httpd_log_t;
	type initrc_t;
	type system_mail_t;
	type nfs_t;
	type rpm_var_lib_t;
}

type spacewalk_install_log_t;
logging_log_file(spacewalk_install_log_t);
type spacewalk_log_t;
logging_log_file(spacewalk_log_t);
type spacewalk_httpd_log_t;
logging_log_file(spacewalk_httpd_log_t);
type spacewalk_data_t;
files_type(spacewalk_data_t);
type spacewalk_cache_t;
files_type(spacewalk_cache_t);

allow httpd_t spacewalk_install_log_t:file { append ioctl };
allow restorecon_t spacewalk_install_log_t:file { append };

allow httpd_t self:process { execheap };

dontaudit httpd_sys_script_t httpd_log_t:file { ioctl };

type spacewalk_initrc_exec_t;
domain_entry_file(initrc_t, spacewalk_initrc_exec_t)

optional_policy(`
	gen_require(`
		type java_t;
	')
	domain_auto_trans(java_t, spacewalk_initrc_exec_t, initrc_t)
')

allow restorecon_t spacewalk_initrc_exec_t:file { relabelto getattr };

filetrans_pattern(httpd_t, spacewalk_log_t, spacewalk_httpd_log_t, file)
manage_files_pattern(httpd_t, spacewalk_log_t, spacewalk_httpd_log_t)

manage_files_pattern(httpd_t, spacewalk_data_t, spacewalk_data_t)
manage_lnk_files_pattern(httpd_t, spacewalk_data_t, spacewalk_data_t)
manage_dirs_pattern(httpd_t, spacewalk_data_t, spacewalk_data_t)
read_lnk_files_pattern(restorecon_t, spacewalk_data_t, spacewalk_data_t)

dontaudit system_mail_t httpd_t:file read;

manage_files_pattern(httpd_t, spacewalk_cache_t, spacewalk_cache_t)
manage_dirs_pattern(httpd_t, spacewalk_cache_t, spacewalk_cache_t)

tunable_policy(`spacewalk_nfs_mountpoint',`
	manage_files_pattern(httpd_t, nfs_t, nfs_t)
	manage_lnk_files_pattern(httpd_t, nfs_t, nfs_t)
	manage_dirs_pattern(httpd_t, nfs_t, nfs_t)
	read_lnk_files_pattern(restorecon_t, nfs_t, nfs_t)
')

type spacewalk_db_install_log_t;
files_type(spacewalk_db_install_log_t);
optional_policy(`
	type spacewalk_sqlplus_spool_log_t;
	logging_log_file(spacewalk_sqlplus_spool_log_t);
	gen_require(`
		type oracle_port_t;
		type oracle_sqlplus_t;
	')
	allow httpd_t oracle_port_t:tcp_socket name_connect;
	rw_files_pattern(oracle_sqlplus_t, spacewalk_db_install_log_t, spacewalk_sqlplus_spool_log_t);
	read_files_pattern(oracle_sqlplus_t, spacewalk_db_install_log_t, spacewalk_db_install_log_t);
	create_files_pattern(oracle_sqlplus_t, spacewalk_db_install_log_t, spacewalk_sqlplus_spool_log_t);
	filetrans_pattern(oracle_sqlplus_t, spacewalk_db_install_log_t, spacewalk_sqlplus_spool_log_t, file)
	allow oracle_sqlplus_t spacewalk_db_install_log_t:file append;
')

optional_policy(`
        gen_require(`
                type cobblerd_t;
        ')
        read_files_pattern(cobblerd_t, spacewalk_data_t, spacewalk_data_t);
        allow cobblerd_t spacewalk_data_t:file { getattr link unlink rename };
        manage_dirs_pattern(cobblerd_t, spacewalk_data_t, spacewalk_data_t);
')

# rpm_dontaudit_search_db(httpd_t) is not available on RHELs
dontaudit httpd_t rpm_var_lib_t:dir list_dir_perms;
dontaudit httpd_t rpm_var_lib_t:file read_file_perms;

# Allow PostgreSQL to use dblink
optional_policy(`
        gen_require(`
                type postgresql_t;
        ')
        allow postgresql_t self:unix_stream_socket { connectto };
        allow httpd_t postgresql_t:unix_stream_socket connectto;
')

# Fedora 18 has postgresql socket in /var/run/postgresql/
optional_policy(`
        gen_require(`
                type postgresql_var_run_t;
        ')
        allow httpd_t postgresql_var_run_t:dir search;
        allow httpd_t postgresql_var_run_t:sock_file write;
')

optional_policy(`
        gen_require(`
                type cobbler_var_log_t;
        ')
        allow httpd_t cobbler_var_log_t:dir { search };
')

